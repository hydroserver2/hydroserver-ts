/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/auth/{client}/account": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Account
         * @description Get user account details.
         */
        get: operations["iam_views_account_get_account"];
        put?: never;
        /**
         * Create Account
         * @description Create a new user account.
         */
        post: operations["iam_views_account_create_account"];
        /**
         * Delete Account
         * @description Delete a user account.
         */
        delete: operations["iam_views_account_delete_account"];
        options?: never;
        head?: never;
        /**
         * Update Account
         * @description Update user account details.
         */
        patch: operations["iam_views_account_update_account"];
        trace?: never;
    };
    "/api/auth/{client}/account/user-types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get User Types
         * @description Get user types.
         */
        get: operations["iam_views_account_get_user_types"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/{client}/account/organization-types": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get User Types
         * @description Get organization types.
         */
        get: operations["iam_views_account_get_user_types"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/{client}/account/email/verify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Send Verification Email
         * @description Send an account verification email.
         */
        put: operations["iam_views_email_send_verification_email"];
        /**
         * Verify Email
         * @description Verify an account email.
         */
        post: operations["iam_views_email_verify_email"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/{client}/account/password/request": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Request Password Reset
         * @description Request password reset email.
         */
        post: operations["iam_views_password_request_password_reset"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/{client}/account/password/reset": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Reset Password
         * @description Reset account password.
         */
        post: operations["iam_views_password_reset_password"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/{client}/session": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Session
         * @description Get an active user session.
         */
        get: operations["iam_views_session_get_session"];
        put?: never;
        /**
         * Create Session
         * @description Create a new user session.
         */
        post: operations["iam_views_session_create_session"];
        /**
         * Delete Session
         * @description Delete an active user session.
         */
        delete: operations["iam_views_session_delete_session"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/{client}/provider/connections": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Providers
         * @description Get connected provider accounts.
         */
        get: operations["iam_views_provider_get_providers"];
        put?: never;
        post?: never;
        /**
         * Delete Provider
         * @description Disconnect a provider account.
         */
        delete: operations["iam_views_provider_delete_provider"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/{client}/provider/redirect": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Redirect To Provider
         * @description Redirect to provider login window.
         */
        post: operations["iam_views_provider_redirect_to_provider"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/{client}/provider/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Provider Signup
         * @description Finish signing up with a provider account.
         */
        post: operations["iam_views_provider_provider_signup"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AccountDetailResponse */
        AccountDetailResponse: {
            /** Phone */
            phone?: string | null;
            /** Address */
            address?: string | null;
            /** Link */
            link?: string | null;
            /** Type */
            type: string;
            /** Firstname */
            firstName: string;
            /** Middlename */
            middleName?: string | null;
            /** Lastname */
            lastName: string;
            organization?: components["schemas"]["OrganizationDetailResponse"] | null;
            /**
             * Email
             * Format: email
             */
            email: string;
            /**
             * Accounttype
             * @enum {string}
             */
            accountType: "admin" | "standard" | "limited";
        };
        /** OrganizationDetailResponse */
        OrganizationDetailResponse: {
            /** Code */
            code: string;
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            /** Link */
            link?: string | null;
            /** Type */
            type: string;
        };
        /** AccountPostBody */
        AccountPostBody: {
            /** Phone */
            phone?: string | null;
            /** Address */
            address?: string | null;
            /** Link */
            link?: string | null;
            /** Type */
            type: string;
            /** Firstname */
            firstName: string;
            /** Middlename */
            middleName?: string | null;
            /** Lastname */
            lastName: string;
            organization?: components["schemas"]["OrganizationPostBody"] | null;
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password: string;
        };
        /** OrganizationPostBody */
        OrganizationPostBody: {
            /** Code */
            code: string;
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            /** Link */
            link?: string | null;
            /** Type */
            type: string;
        };
        /** AccountPatchBody */
        AccountPatchBody: {
            /** Phone */
            phone?: string | null;
            /** Address */
            address?: string | null;
            /** Link */
            link?: string | null;
            /** Type */
            type?: string;
            /** Firstname */
            firstName?: string;
            /** Middlename */
            middleName?: string | null;
            /** Lastname */
            lastName?: string;
            organization?: components["schemas"]["OrganizationPatchBody"] | null;
        };
        /** OrganizationPatchBody */
        OrganizationPatchBody: {
            /** Code */
            code?: string;
            /** Name */
            name?: string;
            /** Description */
            description?: string | null;
            /** Link */
            link?: string | null;
            /** Type */
            type?: string;
        };
        /** VocabularyQueryParameters */
        VocabularyQueryParameters: {
            /**
             * Page
             * @description Page number (1-based).
             */
            page?: number | null;
            /**
             * Page Size
             * @description The number of items per page.
             */
            page_size?: number | null;
            /**
             * Order Desc
             * @description Sort terms by descending.
             * @default false
             */
            order_desc: boolean | null;
        };
        /** VerificationEmailPutBody */
        VerificationEmailPutBody: {
            /**
             * Email
             * Format: email
             */
            email: string;
        };
        /** VerifyEmailPostBody */
        VerifyEmailPostBody: {
            /** Key */
            key: string;
        };
        /** RequestResetPasswordPostBody */
        RequestResetPasswordPostBody: {
            /**
             * Email
             * Format: email
             */
            email: string;
        };
        /** ResetPasswordPostBody */
        ResetPasswordPostBody: {
            /** Key */
            key: string;
            /** Password */
            password: string;
        };
        /** SessionPostBody */
        SessionPostBody: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password: string;
        };
        /** ProviderRedirectPostForm */
        ProviderRedirectPostForm: {
            /** Provider */
            provider: string;
            /** Callback Url */
            callback_url: string;
            /**
             * Process
             * @enum {string}
             */
            process: "login" | "connect";
        };
        /** ProviderSignupPostBody */
        ProviderSignupPostBody: {
            /** Phone */
            phone?: string | null;
            /** Address */
            address?: string | null;
            /** Link */
            link?: string | null;
            /** Type */
            type?: string;
            /** Firstname */
            firstName?: string;
            /** Middlename */
            middleName?: string | null;
            /** Lastname */
            lastName?: string;
            organization: components["schemas"]["OrganizationPostBody"] | null;
            /**
             * Email
             * Format: email
             */
            email: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    iam_views_account_get_account: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                client: "browser" | "app";
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AccountDetailResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    iam_views_account_create_account: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                client: "browser" | "app";
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AccountPostBody"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AccountDetailResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    iam_views_account_delete_account: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                client: "browser" | "app";
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    iam_views_account_update_account: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                client: "browser" | "app";
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AccountPatchBody"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AccountDetailResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Unprocessable Entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    iam_views_account_get_user_types: {
        parameters: {
            query?: {
                /** @description Page number (1-based). */
                page?: number | null;
                /** @description The number of items per page. */
                page_size?: number | null;
                /** @description Sort terms by descending. */
                order_desc?: boolean | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
    iam_views_account_get_user_types: {
        parameters: {
            query?: {
                /** @description Page number (1-based). */
                page?: number | null;
                /** @description The number of items per page. */
                page_size?: number | null;
                /** @description Sort terms by descending. */
                order_desc?: boolean | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
    iam_views_email_send_verification_email: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                client: "browser" | "app";
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["VerificationEmailPutBody"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Too Many Requests */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    iam_views_email_verify_email: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                client: "browser" | "app";
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["VerifyEmailPostBody"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    iam_views_password_request_password_reset: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                client: "browser" | "app";
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RequestResetPasswordPostBody"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    iam_views_password_reset_password: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                client: "browser" | "app";
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResetPasswordPostBody"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    iam_views_session_get_session: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                client: "browser" | "app";
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    iam_views_session_create_session: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                client: "browser" | "app";
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SessionPostBody"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    iam_views_session_delete_session: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                client: "browser" | "app";
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    iam_views_provider_get_providers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                client: "browser" | "app";
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    iam_views_provider_delete_provider: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                client: "browser" | "app";
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    iam_views_provider_redirect_to_provider: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                client: "browser" | "app";
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** Provider */
                    provider: string;
                    /** Callback Url */
                    callback_url: string;
                    /**
                     * Process
                     * @enum {string}
                     */
                    process: "login" | "connect";
                };
            };
        };
        responses: {
            /** @description Found */
            302: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    iam_views_provider_provider_signup: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                client: "browser" | "app";
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProviderSignupPostBody"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
}
