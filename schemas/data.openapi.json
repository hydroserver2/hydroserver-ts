{
  "openapi": "3.1.0",
  "info": {
    "title": "HydroServer Data Management API",
    "version": "1.3.0",
    "description": ""
  },
  "paths": {
    "/api/data/workspaces": {
      "get": {
        "operationId": "iam_views_workspace_get_workspaces",
        "summary": "Get Workspaces",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "enum": ["name", "isPrivate", "-name", "-isPrivate"],
                    "type": "string"
                  },
                  "type": "array"
                },
                { "type": "null" }
              ],
              "default": [],
              "description": "Select one or more fields to order the response by.",
              "title": "Order By"
            },
            "required": false,
            "description": "Select one or more fields to order the response by."
          },
          {
            "in": "query",
            "name": "is_associated",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Whether the workspace is associated with the authenticated user",
              "title": "Is Associated"
            },
            "required": false,
            "description": "Whether the workspace is associated with the authenticated user"
          },
          {
            "in": "query",
            "name": "is_private",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Whether the returned workspaces should be private or public.",
              "title": "Is Private"
            },
            "required": false,
            "description": "Whether the returned workspaces should be private or public."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/WorkspaceDetailResponse"
                      },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/WorkspaceSummaryResponse"
                      },
                      "type": "array"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get public workspaces and workspaces associated with the authenticated user.",
        "tags": ["Workspaces"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "iam_views_workspace_create_workspace",
        "summary": "Create Workspace",
        "parameters": [
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": true,
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/WorkspaceDetailResponse" },
                    { "$ref": "#/components/schemas/WorkspaceSummaryResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Create a new workspace owned by the authenticated user.",
        "tags": ["Workspaces"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WorkspacePostBody" }
            }
          },
          "required": true
        },
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      }
    },
    "/api/data/workspaces/{workspace_id}": {
      "get": {
        "operationId": "iam_views_workspace_get_workspace",
        "summary": "Get Workspace",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": true,
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/WorkspaceDetailResponse" },
                    { "$ref": "#/components/schemas/WorkspaceSummaryResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get workspace details.",
        "tags": ["Workspaces"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "patch": {
        "operationId": "iam_views_workspace_update_workspace",
        "summary": "Update Workspace",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": true,
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/WorkspaceDetailResponse" },
                    { "$ref": "#/components/schemas/WorkspaceSummaryResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Update a workspace owned by the authenticated user.",
        "tags": ["Workspaces"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WorkspacePatchBody" }
            }
          },
          "required": true
        },
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      },
      "delete": {
        "operationId": "iam_views_workspace_delete_workspace",
        "summary": "Delete Workspace",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Delete a workspace owned by the authenticated user.",
        "tags": ["Workspaces"],
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      }
    },
    "/api/data/workspaces/{workspace_id}/transfer": {
      "post": {
        "operationId": "iam_views_workspace_transfer_workspace",
        "summary": "Transfer Workspace",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Transfer a workspace owned by the authenticated user to another HydroServer user.",
        "tags": ["Workspaces"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WorkspaceTransferBody" }
            }
          },
          "required": true
        },
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      },
      "put": {
        "operationId": "iam_views_workspace_accept_workspace_transfer",
        "summary": "Accept Workspace Transfer",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Accept a pending workspace transfer.",
        "tags": ["Workspaces"],
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      },
      "delete": {
        "operationId": "iam_views_workspace_reject_workspace_transfer",
        "summary": "Reject Workspace Transfer",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Reject a pending workspace transfer.",
        "tags": ["Workspaces"],
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      }
    },
    "/api/data/workspaces/{workspace_id}/collaborators": {
      "get": {
        "operationId": "iam_views_collaborator_get_collaborators",
        "summary": "Get Collaborators",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "role_id",
            "schema": {
              "default": [],
              "description": "Filter collaborators by role ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Role Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter collaborators by role ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CollaboratorDetailResponse"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get all collaborators associated with a workspace.",
        "tags": ["Collaborators"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "iam_views_collaborator_add_collaborator",
        "summary": "Add Collaborator",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollaboratorDetailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Add a collaborator to a workspace.",
        "tags": ["Collaborators"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CollaboratorPostBody" }
            }
          },
          "required": true
        },
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      },
      "put": {
        "operationId": "iam_views_collaborator_edit_collaborator_role",
        "summary": "Edit Collaborator Role",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollaboratorDetailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Edit a collaborator's role in a workspace.",
        "tags": ["Collaborators"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CollaboratorPostBody" }
            }
          },
          "required": true
        },
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      },
      "delete": {
        "operationId": "iam_views_collaborator_remove_collaborator",
        "summary": "Remove Collaborator",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Remove a collaborator from a workspace.",
        "tags": ["Collaborators"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollaboratorDeleteBody"
              }
            }
          },
          "required": true
        },
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      }
    },
    "/api/data/workspaces/{workspace_id}/api-keys": {
      "get": {
        "operationId": "iam_views_api_key_get_api_keys",
        "summary": "Get Api Keys",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "enum": [
                      "name",
                      "isActive",
                      "expiresAt",
                      "-name",
                      "-isActive",
                      "-expiresAt"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                { "type": "null" }
              ],
              "default": [],
              "description": "Select one or more fields to order the response by.",
              "title": "Order By"
            },
            "required": false,
            "description": "Select one or more fields to order the response by."
          },
          {
            "in": "query",
            "name": "role_id",
            "schema": {
              "default": [],
              "description": "Filter API keys by role ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Role Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter API keys by role ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/APIKeySummaryResponse"
                      },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/APIKeyDetailResponse"
                      },
                      "type": "array"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get API keys associated with the authenticated user.",
        "tags": ["API Keys"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "iam_views_api_key_create_api_key",
        "summary": "Create Api Key",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/APIKeySummaryPostResponse"
                    },
                    { "$ref": "#/components/schemas/APIKeyDetailPostResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Create a new API key for the workspace.",
        "tags": ["API Keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/APIKeyPostBody" }
            }
          },
          "required": true
        },
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      }
    },
    "/api/data/workspaces/{workspace_id}/api-keys/{api_key_id}": {
      "get": {
        "operationId": "iam_views_api_key_get_api_key",
        "summary": "Get Api Key",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "api_key_id",
            "schema": {
              "format": "uuid",
              "title": "Api Key Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/APIKeySummaryResponse" },
                    { "$ref": "#/components/schemas/APIKeyDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get API key details.",
        "tags": ["API Keys"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "patch": {
        "operationId": "iam_views_api_key_update_api_key",
        "summary": "Update Api Key",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "api_key_id",
            "schema": {
              "format": "uuid",
              "title": "Api Key Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/APIKeySummaryResponse" },
                    { "$ref": "#/components/schemas/APIKeyDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Update an API key.",
        "tags": ["API Keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/APIKeyPatchBody" }
            }
          },
          "required": true
        },
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      },
      "delete": {
        "operationId": "iam_views_api_key_delete_api_key",
        "summary": "Delete Api Key",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "api_key_id",
            "schema": {
              "format": "uuid",
              "title": "Api Key Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Delete an API key.",
        "tags": ["API Keys"],
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      }
    },
    "/api/data/workspaces/{workspace_id}/api-keys/{api_key_id}/regenerate": {
      "put": {
        "operationId": "iam_views_api_key_regenerate_api_key",
        "summary": "Regenerate Api Key",
        "parameters": [
          {
            "in": "path",
            "name": "workspace_id",
            "schema": {
              "format": "uuid",
              "title": "Workspace Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "api_key_id",
            "schema": {
              "format": "uuid",
              "title": "Api Key Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/APIKeySummaryPostResponse"
                    },
                    { "$ref": "#/components/schemas/APIKeyDetailPostResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Regenerate an API key using existing settings.",
        "tags": ["API Keys"],
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      }
    },
    "/api/data/roles": {
      "get": {
        "operationId": "iam_views_role_get_roles",
        "summary": "Get Roles",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "enum": [
                      "name",
                      "isUserRole",
                      "isAPIKeyRole",
                      "-name",
                      "-isUserRole",
                      "-isAPIKeyRole"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                { "type": "null" }
              ],
              "default": [],
              "description": "Select one or more fields to order the response by.",
              "title": "Order By"
            },
            "required": false,
            "description": "Select one or more fields to order the response by."
          },
          {
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "default": [],
              "description": "Filter roles by workspace ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Workspace Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter roles by workspace ID."
          },
          {
            "in": "query",
            "name": "is_user_role",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Controls whether the returned roles should be user roles.",
              "title": "Is User Role"
            },
            "required": false,
            "description": "Controls whether the returned roles should be user roles."
          },
          {
            "in": "query",
            "name": "is_apikey_role",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Controls whether the returned roles should be API key roles.",
              "title": "Is Apikey Role"
            },
            "required": false,
            "description": "Controls whether the returned roles should be API key roles."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/RoleSummaryResponse"
                      },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/RoleDetailResponse"
                      },
                      "type": "array"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get public Roles and Roles associated with the authenticated user.",
        "tags": ["Roles"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/roles/{role_id}": {
      "get": {
        "operationId": "iam_views_role_get_role",
        "summary": "Get Role",
        "parameters": [
          {
            "in": "path",
            "name": "role_id",
            "schema": {
              "format": "uuid",
              "title": "Role Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/RoleSummaryResponse" },
                    { "$ref": "#/components/schemas/RoleDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get a Role.",
        "tags": ["Roles"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/things": {
      "get": {
        "operationId": "sta_views_thing_get_things",
        "summary": "Get Things",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "enum": [
                      "name",
                      "samplingFeatureType",
                      "samplingFeatureCode",
                      "siteType",
                      "isPrivate",
                      "latitude",
                      "longitude",
                      "elevation_m",
                      "elevationDatum",
                      "state",
                      "county",
                      "country",
                      "-name",
                      "-samplingFeatureType",
                      "-samplingFeatureCode",
                      "-siteType",
                      "-isPrivate",
                      "-latitude",
                      "-longitude",
                      "-elevation_m",
                      "-elevationDatum",
                      "-state",
                      "-county",
                      "-country"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                { "type": "null" }
              ],
              "default": [],
              "description": "Select one or more fields to order the response by.",
              "title": "Order By"
            },
            "required": false,
            "description": "Select one or more fields to order the response by."
          },
          {
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "default": [],
              "description": "Filter things by workspace ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Workspace Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter things by workspace ID."
          },
          {
            "in": "query",
            "name": "bbox",
            "schema": {
              "default": [],
              "description": "Filter things by bounding box. Format bounding box as {min_lon},{min_lat},{max_lon},{max_lat}",
              "items": { "type": "string" },
              "title": "Bbox",
              "type": "array"
            },
            "required": false,
            "description": "Filter things by bounding box. Format bounding box as {min_lon},{min_lat},{max_lon},{max_lat}"
          },
          {
            "in": "query",
            "name": "state",
            "schema": {
              "default": [],
              "description": "Filter things by state.",
              "items": { "type": "string" },
              "title": "State",
              "type": "array"
            },
            "required": false,
            "description": "Filter things by state."
          },
          {
            "in": "query",
            "name": "county",
            "schema": {
              "default": [],
              "description": "Filter things by county.",
              "items": { "type": "string" },
              "title": "County",
              "type": "array"
            },
            "required": false,
            "description": "Filter things by county."
          },
          {
            "in": "query",
            "name": "country",
            "schema": {
              "default": [],
              "description": "Filter things by country.",
              "items": { "type": "string" },
              "title": "Country",
              "type": "array"
            },
            "required": false,
            "description": "Filter things by country."
          },
          {
            "in": "query",
            "name": "site_type",
            "schema": {
              "default": [],
              "description": "Filter things by site type.",
              "items": { "type": "string" },
              "title": "Site Type",
              "type": "array"
            },
            "required": false,
            "description": "Filter things by site type."
          },
          {
            "in": "query",
            "name": "sampling_feature_type",
            "schema": {
              "default": [],
              "description": "Filter things by sampling feature type.",
              "items": { "type": "string" },
              "title": "Sampling Feature Type",
              "type": "array"
            },
            "required": false,
            "description": "Filter things by sampling feature type."
          },
          {
            "in": "query",
            "name": "tag",
            "schema": {
              "default": [],
              "description": "Filter things by tag. Format tag filters as {key}:{value}",
              "items": { "type": "string" },
              "title": "Tag",
              "type": "array"
            },
            "required": false,
            "description": "Filter things by tag. Format tag filters as {key}:{value}"
          },
          {
            "in": "query",
            "name": "is_private",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Controls whether the returned things should be private or public.",
              "title": "Is Private"
            },
            "required": false,
            "description": "Controls whether the returned things should be private or public."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/ThingSummaryResponse"
                      },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/ThingDetailResponse"
                      },
                      "type": "array"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get public Things and Things associated with the authenticated user.",
        "tags": ["Things"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "sta_views_thing_create_thing",
        "summary": "Create Thing",
        "parameters": [
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/ThingSummaryResponse" },
                    { "$ref": "#/components/schemas/ThingDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Create a new Thing.",
        "tags": ["Things"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ThingPostBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/things/tags/keys": {
      "get": {
        "operationId": "sta_views_thing_get_thing_tag_keys",
        "summary": "Get Thing Tag Keys",
        "parameters": [
          {
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "type": "null" }
              ],
              "title": "Workspace Id"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "thing_id",
            "schema": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "type": "null" }
              ],
              "title": "Thing Id"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "items": { "type": "string" },
                    "type": "array"
                  },
                  "title": "Response",
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get all existing unique thing tag keys.",
        "tags": ["Things"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/things/site-types": {
      "get": {
        "operationId": "sta_views_thing_get_site_types",
        "summary": "Get Site Types",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "order_desc",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "description": "Sort terms by descending.",
              "title": "Order Desc"
            },
            "required": false,
            "description": "Sort terms by descending."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Get site types.",
        "tags": ["Things"]
      }
    },
    "/api/data/things/sampling-feature-types": {
      "get": {
        "operationId": "sta_views_thing_get_sampling_feature_types",
        "summary": "Get Sampling Feature Types",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "order_desc",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "description": "Sort terms by descending.",
              "title": "Order Desc"
            },
            "required": false,
            "description": "Sort terms by descending."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Get sampling feature types.",
        "tags": ["Things"]
      }
    },
    "/api/data/things/file-attachment-types": {
      "get": {
        "operationId": "sta_views_thing_get_file_attachment_types",
        "summary": "Get File Attachment Types",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "order_desc",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "description": "Sort terms by descending.",
              "title": "Order Desc"
            },
            "required": false,
            "description": "Sort terms by descending."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Get file attachment types.",
        "tags": ["Things"]
      }
    },
    "/api/data/things/{thing_id}": {
      "get": {
        "operationId": "sta_views_thing_get_thing",
        "summary": "Get Thing",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "schema": {
              "format": "uuid",
              "title": "Thing Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/ThingSummaryResponse" },
                    { "$ref": "#/components/schemas/ThingDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get a Thing.",
        "tags": ["Things"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "patch": {
        "operationId": "sta_views_thing_update_thing",
        "summary": "Update Thing",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "schema": {
              "format": "uuid",
              "title": "Thing Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/ThingSummaryResponse" },
                    { "$ref": "#/components/schemas/ThingDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Update a Thing.",
        "tags": ["Things"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ThingPatchBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "sta_views_thing_delete_thing",
        "summary": "Delete Thing",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "schema": {
              "format": "uuid",
              "title": "Thing Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Delete a Thing.",
        "tags": ["Things"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/things/{thing_id}/tags": {
      "get": {
        "operationId": "sta_views_thing_get_thing_tags",
        "summary": "Get Thing Tags",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "schema": {
              "format": "uuid",
              "title": "Thing Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/TagGetResponse" },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get all tags associated with a Thing.",
        "tags": ["Things"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "sta_views_thing_add_thing_tag",
        "summary": "Add Thing Tag",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "schema": {
              "format": "uuid",
              "title": "Thing Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TagGetResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Add a tag to a Thing.",
        "tags": ["Things"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TagPostBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "put": {
        "operationId": "sta_views_thing_edit_thing_tag",
        "summary": "Edit Thing Tag",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "schema": {
              "format": "uuid",
              "title": "Thing Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TagGetResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Edit a tag of a Thing.",
        "tags": ["Things"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TagPostBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "sta_views_thing_remove_thing_tag",
        "summary": "Remove Thing Tag",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "schema": {
              "format": "uuid",
              "title": "Thing Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Remove a tag from a Thing.",
        "tags": ["Things"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TagDeleteBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/things/{thing_id}/file-attachments": {
      "get": {
        "operationId": "sta_views_thing_get_thing_file_attachments",
        "summary": "Get Thing File Attachments",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "schema": {
              "format": "uuid",
              "title": "Thing Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileAttachmentGetResponse"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get all file attachments associated with a Thing.",
        "tags": ["Things"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "sta_views_thing_add_thing_file_attachment",
        "summary": "Add Thing File Attachment",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "schema": {
              "format": "uuid",
              "title": "Thing Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileAttachmentGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Add a file attachment to a thing.",
        "tags": ["Things"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "format": "binary",
                    "title": "File",
                    "type": "string"
                  },
                  "data": {
                    "$ref": "#/components/schemas/FileAttachmentPostBody"
                  }
                },
                "required": ["file", "data"],
                "title": "MultiPartBodyParams",
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "sta_views_thing_remove_thing_file_attachment",
        "summary": "Remove Thing File Attachment",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "schema": {
              "format": "uuid",
              "title": "Thing Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Remove a file attachment from a thing.",
        "tags": ["Things"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileAttachmentDeleteBody"
              }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/things/{thing_id}/archive": {
      "get": {
        "operationId": "etl_views_hydroshare_archival_get_thing_archive",
        "summary": "Get Thing Archive",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "schema": {
              "format": "uuid",
              "title": "Thing Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/HydroShareArchivalDetailResponse"
                    },
                    { "type": "null" }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get HydroShare archival details for a thing.",
        "tags": ["HydroShare Archival"],
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      },
      "post": {
        "operationId": "etl_views_hydroshare_archival_create_thing_archive",
        "summary": "Create Thing Archive",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "schema": {
              "format": "uuid",
              "title": "Thing Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HydroShareArchivalDetailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Create a HydroShare data archive for a thing.",
        "tags": ["HydroShare Archival"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HydroShareArchivalPostBody"
              }
            }
          },
          "required": true
        },
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      },
      "patch": {
        "operationId": "etl_views_hydroshare_archival_update_archive",
        "summary": "Update Archive",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "schema": {
              "format": "uuid",
              "title": "Thing Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HydroShareArchivalDetailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Update HydroShare data archive details for a thing.",
        "tags": ["HydroShare Archival"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HydroShareArchivalPatchBody"
              }
            }
          },
          "required": true
        },
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      },
      "delete": {
        "operationId": "etl_views_hydroshare_archival_delete_archive",
        "summary": "Delete Archive",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "schema": {
              "format": "uuid",
              "title": "Thing Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Delete a HydroShare data archive for a thing. Note: This will not delete the HydroShare resource.",
        "tags": ["HydroShare Archival"],
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      }
    },
    "/api/data/things/{thing_id}/archive/trigger": {
      "post": {
        "operationId": "etl_views_hydroshare_archival_run_thing_archival",
        "summary": "Run Thing Archival",
        "parameters": [
          {
            "in": "path",
            "name": "thing_id",
            "schema": {
              "format": "uuid",
              "title": "Thing Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HydroShareArchivalDetailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Archive thing data to HydroShare.",
        "tags": ["HydroShare Archival"],
        "security": [{ "SessionAuth": [] }, { "BearerAuth": [] }]
      }
    },
    "/api/data/datastreams": {
      "get": {
        "operationId": "sta_views_datastream_get_datastreams",
        "summary": "Get Datastreams",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "enum": [
                      "name",
                      "observationType",
                      "sampledMedium",
                      "status",
                      "resultType",
                      "isPrivate",
                      "valueCount",
                      "phenomenonBeginTime",
                      "phenomenonEndTime",
                      "resultBeginTime",
                      "resultEndTime",
                      "-name",
                      "-observationType",
                      "-sampledMedium",
                      "-status",
                      "-resultType",
                      "-isPrivate",
                      "-valueCount",
                      "-phenomenonBeginTime",
                      "-phenomenonEndTime",
                      "-resultBeginTime",
                      "-resultEndTime"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                { "type": "null" }
              ],
              "default": [],
              "description": "Select one or more fields to order the response by.",
              "title": "Order By"
            },
            "required": false,
            "description": "Select one or more fields to order the response by."
          },
          {
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "default": [],
              "description": "Filter datastreams by workspace ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Workspace Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter datastreams by workspace ID."
          },
          {
            "in": "query",
            "name": "thing_id",
            "schema": {
              "default": [],
              "description": "Filter datastreams by thing ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Thing Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter datastreams by thing ID."
          },
          {
            "in": "query",
            "name": "sensor_id",
            "schema": {
              "default": [],
              "description": "Filter datastreams by sensor ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Sensor Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter datastreams by sensor ID."
          },
          {
            "in": "query",
            "name": "observed_property_id",
            "schema": {
              "default": [],
              "description": "Filter datastreams by observed property ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Observed Property Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter datastreams by observed property ID."
          },
          {
            "in": "query",
            "name": "processing_level_id",
            "schema": {
              "default": [],
              "description": "Filter datastreams by processing level ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Processing Level Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter datastreams by processing level ID."
          },
          {
            "in": "query",
            "name": "unit_id",
            "schema": {
              "default": [],
              "description": "Filter datastreams by unit ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Unit Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter datastreams by unit ID."
          },
          {
            "in": "query",
            "name": "result_qualifier_id",
            "schema": {
              "default": [],
              "description": "Filter datastreams by observation result qualifier ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Result Qualifier Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter datastreams by observation result qualifier ID."
          },
          {
            "in": "query",
            "name": "data_source_id",
            "schema": {
              "default": [],
              "description": "Filter datastreams by data source ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Data Source Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter datastreams by data source ID."
          },
          {
            "in": "query",
            "name": "data_archive_id",
            "schema": {
              "default": [],
              "description": "Filter datastreams by data archive ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Data Archive Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter datastreams by data archive ID."
          },
          {
            "in": "query",
            "name": "observation_type",
            "schema": {
              "default": [],
              "description": "Filter things by observation type.",
              "items": { "type": "string" },
              "title": "Observation Type",
              "type": "array"
            },
            "required": false,
            "description": "Filter things by observation type."
          },
          {
            "in": "query",
            "name": "sampled_medium",
            "schema": {
              "default": [],
              "description": "Filter things by sampled medium.",
              "items": { "type": "string" },
              "title": "Sampled Medium",
              "type": "array"
            },
            "required": false,
            "description": "Filter things by sampled medium."
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "default": [],
              "description": "Filter things by status.",
              "items": { "type": "string" },
              "title": "Status",
              "type": "array"
            },
            "required": false,
            "description": "Filter things by status."
          },
          {
            "in": "query",
            "name": "result_type",
            "schema": {
              "default": [],
              "description": "Filter things by result type.",
              "items": { "type": "string" },
              "title": "Result Type",
              "type": "array"
            },
            "required": false,
            "description": "Filter things by result type."
          },
          {
            "in": "query",
            "name": "is_private",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Controls whether the datastreams should be private or public.",
              "title": "Is Private"
            },
            "required": false,
            "description": "Controls whether the datastreams should be private or public."
          },
          {
            "in": "query",
            "name": "value_count_max",
            "schema": {
              "anyOf": [{ "type": "integer" }, { "type": "null" }],
              "description": "Sets the maximum value count of filtered datastreams.",
              "title": "Value Count Max"
            },
            "required": false,
            "description": "Sets the maximum value count of filtered datastreams."
          },
          {
            "in": "query",
            "name": "value_count_min",
            "schema": {
              "anyOf": [{ "type": "integer" }, { "type": "null" }],
              "description": "Sets the minimum value count of filtered datastreams.",
              "title": "Value Count Min"
            },
            "required": false,
            "description": "Sets the minimum value count of filtered datastreams."
          },
          {
            "in": "query",
            "name": "phenomenon_begin_time_max",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the maximum phenomenon begin time of filtered datastreams.",
              "title": "Phenomenon Begin Time Max"
            },
            "required": false,
            "description": "Sets the maximum phenomenon begin time of filtered datastreams."
          },
          {
            "in": "query",
            "name": "phenomenon_begin_time_min",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the minimum phenomenon begin time of filtered datastreams.",
              "title": "Phenomenon Begin Time Min"
            },
            "required": false,
            "description": "Sets the minimum phenomenon begin time of filtered datastreams."
          },
          {
            "in": "query",
            "name": "phenomenon_end_time_max",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the maximum phenomenon end time of filtered datastreams.",
              "title": "Phenomenon End Time Max"
            },
            "required": false,
            "description": "Sets the maximum phenomenon end time of filtered datastreams."
          },
          {
            "in": "query",
            "name": "phenomenon_end_time_min",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the minimum phenomenon end time of filtered datastreams.",
              "title": "Phenomenon End Time Min"
            },
            "required": false,
            "description": "Sets the minimum phenomenon end time of filtered datastreams."
          },
          {
            "in": "query",
            "name": "result_begin_time_max",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the maximum result begin time of filtered datastreams.",
              "title": "Result Begin Time Max"
            },
            "required": false,
            "description": "Sets the maximum result begin time of filtered datastreams."
          },
          {
            "in": "query",
            "name": "result_begin_time_min",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the minimum result begin time of filtered datastreams.",
              "title": "Result Begin Time Min"
            },
            "required": false,
            "description": "Sets the minimum result begin time of filtered datastreams."
          },
          {
            "in": "query",
            "name": "result_end_time_max",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the maximum result end time of filtered datastreams.",
              "title": "Result End Time Max"
            },
            "required": false,
            "description": "Sets the maximum result end time of filtered datastreams."
          },
          {
            "in": "query",
            "name": "result_end_time_min",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the minimum result end time of filtered datastreams.",
              "title": "Result End Time Min"
            },
            "required": false,
            "description": "Sets the minimum result end time of filtered datastreams."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/DatastreamSummaryResponse"
                      },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/DatastreamDetailResponse"
                      },
                      "type": "array"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get public Datastreams and Datastreams associated with the authenticated user.",
        "tags": ["Datastreams"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "sta_views_datastream_create_datastream",
        "summary": "Create Datastream",
        "parameters": [
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DatastreamSummaryResponse"
                    },
                    { "$ref": "#/components/schemas/DatastreamDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Create a new Datastream.",
        "tags": ["Datastreams"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DatastreamPostBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/datastreams/tags/keys": {
      "get": {
        "operationId": "sta_views_datastream_get_datastream_tag_keys",
        "summary": "Get Datastream Tag Keys",
        "parameters": [
          {
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "type": "null" }
              ],
              "title": "Workspace Id"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "datastream_id",
            "schema": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "type": "null" }
              ],
              "title": "Datastream Id"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "items": { "type": "string" },
                    "type": "array"
                  },
                  "title": "Response",
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get all existing unique datastream tag keys.",
        "tags": ["Datastreams"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/datastreams/aggregation-statistics": {
      "get": {
        "operationId": "sta_views_datastream_get_datastream_aggregation_statistics",
        "summary": "Get Datastream Aggregation Statistics",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "order_desc",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "description": "Sort terms by descending.",
              "title": "Order Desc"
            },
            "required": false,
            "description": "Sort terms by descending."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Get datastream aggregation statistics.",
        "tags": ["Datastreams"]
      }
    },
    "/api/data/datastreams/statuses": {
      "get": {
        "operationId": "sta_views_datastream_get_datastream_statuses",
        "summary": "Get Datastream Statuses",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "order_desc",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "description": "Sort terms by descending.",
              "title": "Order Desc"
            },
            "required": false,
            "description": "Sort terms by descending."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Get datastream statuses.",
        "tags": ["Datastreams"]
      }
    },
    "/api/data/datastreams/sampled-mediums": {
      "get": {
        "operationId": "sta_views_datastream_get_datastream_sampled_mediums",
        "summary": "Get Datastream Sampled Mediums",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "order_desc",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "description": "Sort terms by descending.",
              "title": "Order Desc"
            },
            "required": false,
            "description": "Sort terms by descending."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Get datastream sampled mediums.",
        "tags": ["Datastreams"]
      }
    },
    "/api/data/datastreams/file-attachment-types": {
      "get": {
        "operationId": "sta_views_datastream_get_file_attachment_types",
        "summary": "Get File Attachment Types",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "order_desc",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "description": "Sort terms by descending.",
              "title": "Order Desc"
            },
            "required": false,
            "description": "Sort terms by descending."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Get file attachment types.",
        "tags": ["Datastreams"]
      }
    },
    "/api/data/datastreams/{datastream_id}": {
      "get": {
        "operationId": "sta_views_datastream_get_datastream",
        "summary": "Get Datastream",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DatastreamSummaryResponse"
                    },
                    { "$ref": "#/components/schemas/DatastreamDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get a Datastream.",
        "tags": ["Datastreams"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "patch": {
        "operationId": "sta_views_datastream_update_datastream",
        "summary": "Update Datastream",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DatastreamSummaryResponse"
                    },
                    { "$ref": "#/components/schemas/DatastreamDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Update a Datastream.",
        "tags": ["Datastreams"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DatastreamPatchBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "sta_views_datastream_delete_datastream",
        "summary": "Delete Datastream",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Delete a Datastream.",
        "tags": ["Datastreams"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/datastreams/{datastream_id}/tags": {
      "get": {
        "operationId": "sta_views_datastream_get_datastream_tags",
        "summary": "Get Datastream Tags",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/TagGetResponse" },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get all tags associated with a Datastream.",
        "tags": ["Datastreams"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "sta_views_datastream_add_datastream_tag",
        "summary": "Add Datastream Tag",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TagGetResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Add a tag to a Datastream.",
        "tags": ["Datastreams"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TagPostBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "put": {
        "operationId": "sta_views_datastream_edit_datastream_tag",
        "summary": "Edit Datastream Tag",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TagGetResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Edit a tag of a Datastream.",
        "tags": ["Datastreams"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TagPostBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "sta_views_datastream_remove_datastream_tag",
        "summary": "Remove Datastream Tag",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Remove a tag from a Datastream.",
        "tags": ["Datastreams"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TagDeleteBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/datastreams/{datastream_id}/file-attachments": {
      "get": {
        "operationId": "sta_views_datastream_get_datastream_file_attachments",
        "summary": "Get Datastream File Attachments",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileAttachmentGetResponse"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get all file attachments associated with a Datastream.",
        "tags": ["Datastreams"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "sta_views_datastream_add_datastream_file_attachment",
        "summary": "Add Datastream File Attachment",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileAttachmentGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Add a file attachment to a datastream.",
        "tags": ["Datastreams"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "format": "binary",
                    "title": "File",
                    "type": "string"
                  },
                  "data": {
                    "$ref": "#/components/schemas/FileAttachmentPostBody"
                  }
                },
                "required": ["file", "data"],
                "title": "MultiPartBodyParams",
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "sta_views_datastream_remove_datastream_file_attachment",
        "summary": "Remove Datastream File Attachment",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Remove a file attachment from a datastream.",
        "tags": ["Datastreams"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileAttachmentDeleteBody"
              }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/datastreams/{datastream_id}/csv": {
      "get": {
        "operationId": "sta_views_datastream_get_datastream_csv",
        "summary": "Get Datastream Csv",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get a CSV representation of the Datastream.",
        "tags": ["Datastreams"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/datastreams/{datastream_id}/observations": {
      "get": {
        "operationId": "sta_views_observation_get_observations",
        "summary": "Get Observations",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "enum": ["phenomenonTime", "-phenomenonTime"],
                    "type": "string"
                  },
                  "type": "array"
                },
                { "type": "null" }
              ],
              "default": [],
              "description": "Select one or more fields to order the response by.",
              "title": "Order By"
            },
            "required": false,
            "description": "Select one or more fields to order the response by."
          },
          {
            "in": "query",
            "name": "format",
            "schema": {
              "anyOf": [
                { "enum": ["record", "row", "column"], "type": "string" },
                { "type": "null" }
              ],
              "description": "Controls the format of the observations response.",
              "title": "Format"
            },
            "required": false,
            "description": "Controls the format of the observations response."
          },
          {
            "in": "query",
            "name": "phenomenon_time_max",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the maximum phenomenon time of filtered observations.",
              "title": "Phenomenon Time Max"
            },
            "required": false,
            "description": "Sets the maximum phenomenon time of filtered observations."
          },
          {
            "in": "query",
            "name": "phenomenon_time_min",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the minimum phenomenon time of filtered observations.",
              "title": "Phenomenon Time Min"
            },
            "required": false,
            "description": "Sets the minimum phenomenon time of filtered observations."
          },
          {
            "in": "query",
            "name": "result_qualifier_code",
            "schema": {
              "default": [],
              "description": "Filter observations by result qualifier code.",
              "items": { "type": "string" },
              "title": "Result Qualifier Code",
              "type": "array"
            },
            "required": false,
            "description": "Filter observations by result qualifier code."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/ObservationSummaryResponse"
                      },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/ObservationDetailResponse"
                      },
                      "type": "array"
                    },
                    { "$ref": "#/components/schemas/ObservationRowResponse" },
                    {
                      "$ref": "#/components/schemas/ObservationColumnarResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get Datastream Observations.",
        "tags": ["Observations"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "sta_views_observation_create_observation",
        "summary": "Create Observation",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ObservationSummaryResponse"
                    },
                    { "$ref": "#/components/schemas/ObservationDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Create a new Observation.",
        "tags": ["Observations"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ObservationPostBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/datastreams/{datastream_id}/observations/bulk-create": {
      "post": {
        "operationId": "sta_views_observation_insert_observations",
        "summary": "Insert Observations",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "mode",
            "schema": {
              "anyOf": [
                {
                  "enum": ["insert", "append", "backfill", "replace"],
                  "type": "string"
                },
                { "type": "null" }
              ],
              "description": "Specifies how new observations are added to the datastream. `insert` allows observations at any timestamp. `append` adds only future observations (after the latest existing timestamp). `backfill` adds only historical observations (before the earliest existing timestamp). `replace` deletes all observations in the range of provided observations before inserting new ones.",
              "title": "Mode"
            },
            "required": false,
            "description": "Specifies how new observations are added to the datastream. `insert` allows observations at any timestamp. `append` adds only future observations (after the latest existing timestamp). `backfill` adds only historical observations (before the earliest existing timestamp). `replace` deletes all observations in the range of provided observations before inserting new ones."
          }
        ],
        "responses": {
          "201": { "description": "Created" },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Insert Datastream Observations.",
        "tags": ["Observations"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObservationBulkPostBody"
              }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/datastreams/{datastream_id}/observations/bulk-delete": {
      "post": {
        "operationId": "sta_views_observation_delete_observations",
        "summary": "Delete Observations",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Delete Datastream Observations between the given phenomenon start and end times.",
        "tags": ["Observations"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObservationBulkDeleteBody"
              }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/datastreams/{datastream_id}/observations/{observation_id}": {
      "get": {
        "operationId": "sta_views_observation_get_observation",
        "summary": "Get Observation",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "observation_id",
            "schema": {
              "format": "uuid",
              "title": "Observation Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ObservationSummaryResponse"
                    },
                    { "$ref": "#/components/schemas/ObservationDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get an Observation.",
        "tags": ["Observations"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "sta_views_observation_delete_observation",
        "summary": "Delete Observation",
        "parameters": [
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "observation_id",
            "schema": {
              "format": "uuid",
              "title": "Observation Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Delete an Observation.",
        "tags": ["Observations"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/observed-properties": {
      "get": {
        "operationId": "sta_views_observed_property_get_observed_properties",
        "summary": "Get Observed Properties",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "enum": ["name", "type", "code", "-name", "-type", "-code"],
                    "type": "string"
                  },
                  "type": "array"
                },
                { "type": "null" }
              ],
              "default": [],
              "description": "Select one or more fields to order the response by.",
              "title": "Order By"
            },
            "required": false,
            "description": "Select one or more fields to order the response by."
          },
          {
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "default": [],
              "description": "Filter observed properties by workspace ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Workspace Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter observed properties by workspace ID."
          },
          {
            "in": "query",
            "name": "thing_id",
            "schema": {
              "default": [],
              "description": "Filter observed properties by thing ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Thing Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter observed properties by thing ID."
          },
          {
            "in": "query",
            "name": "datastream_id",
            "schema": {
              "default": [],
              "description": "Filter observed properties by datastream ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Datastream Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter observed properties by datastream ID."
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "default": [],
              "description": "Filter observed properties by type",
              "items": { "type": "string" },
              "title": "Type",
              "type": "array"
            },
            "required": false,
            "description": "Filter observed properties by type"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/ObservedPropertySummaryResponse"
                      },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/ObservedPropertyDetailResponse"
                      },
                      "type": "array"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get public Observed Properties and Observed Properties associated with the authenticated user.",
        "tags": ["Observed Properties"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "sta_views_observed_property_create_observed_property",
        "summary": "Create Observed Property",
        "parameters": [
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ObservedPropertySummaryResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ObservedPropertyDetailResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Create a new Observed Property.",
        "tags": ["Observed Properties"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObservedPropertyPostBody"
              }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/observed-properties/variable-types": {
      "get": {
        "operationId": "sta_views_observed_property_get_datastream_aggregation_statistics",
        "summary": "Get Datastream Aggregation Statistics",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "order_desc",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "description": "Sort terms by descending.",
              "title": "Order Desc"
            },
            "required": false,
            "description": "Sort terms by descending."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Get variable types.",
        "tags": ["Observed Properties"]
      }
    },
    "/api/data/observed-properties/{observed_property_id}": {
      "get": {
        "operationId": "sta_views_observed_property_get_observed_property",
        "summary": "Get Observed Property",
        "parameters": [
          {
            "in": "path",
            "name": "observed_property_id",
            "schema": {
              "format": "uuid",
              "title": "Observed Property Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ObservedPropertySummaryResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ObservedPropertyDetailResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get an Observed Property.",
        "tags": ["Observed Properties"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "patch": {
        "operationId": "sta_views_observed_property_update_observed_property",
        "summary": "Update Observed Property",
        "parameters": [
          {
            "in": "path",
            "name": "observed_property_id",
            "schema": {
              "format": "uuid",
              "title": "Observed Property Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ObservedPropertySummaryResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ObservedPropertyDetailResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Update an Observed Property.",
        "tags": ["Observed Properties"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObservedPropertyPatchBody"
              }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "sta_views_observed_property_delete_observed_property",
        "summary": "Delete Observed Property",
        "parameters": [
          {
            "in": "path",
            "name": "observed_property_id",
            "schema": {
              "format": "uuid",
              "title": "Observed Property Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Delete an Observed Property.",
        "tags": ["Observed Properties"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/units": {
      "get": {
        "operationId": "sta_views_unit_get_units",
        "summary": "Get Units",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "enum": [
                      "name",
                      "symbol",
                      "type",
                      "-name",
                      "-symbol",
                      "-type"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                { "type": "null" }
              ],
              "default": [],
              "description": "Select one or more fields to order the response by.",
              "title": "Order By"
            },
            "required": false,
            "description": "Select one or more fields to order the response by."
          },
          {
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "default": [],
              "description": "Filter units by workspace ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Workspace Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter units by workspace ID."
          },
          {
            "in": "query",
            "name": "thing_id",
            "schema": {
              "default": [],
              "description": "Filter units by thing ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Thing Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter units by thing ID."
          },
          {
            "in": "query",
            "name": "datastream_id",
            "schema": {
              "default": [],
              "description": "Filter units by datastream ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Datastream Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter units by datastream ID."
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "default": [],
              "description": "Filter units by type",
              "items": { "type": "string" },
              "title": "Type",
              "type": "array"
            },
            "required": false,
            "description": "Filter units by type"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/UnitSummaryResponse"
                      },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/UnitDetailResponse"
                      },
                      "type": "array"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get public Units and Units associated with the authenticated user.",
        "tags": ["Units"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "sta_views_unit_create_unit",
        "summary": "Create Unit",
        "parameters": [
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/UnitSummaryResponse" },
                    { "$ref": "#/components/schemas/UnitDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Create a new Unit.",
        "tags": ["Units"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UnitPostBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/units/types": {
      "get": {
        "operationId": "sta_views_unit_get_unit_types",
        "summary": "Get Unit Types",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "order_desc",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "description": "Sort terms by descending.",
              "title": "Order Desc"
            },
            "required": false,
            "description": "Sort terms by descending."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Get unit types.",
        "tags": ["Units"]
      }
    },
    "/api/data/units/{unit_id}": {
      "get": {
        "operationId": "sta_views_unit_get_unit",
        "summary": "Get Unit",
        "parameters": [
          {
            "in": "path",
            "name": "unit_id",
            "schema": {
              "format": "uuid",
              "title": "Unit Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/UnitSummaryResponse" },
                    { "$ref": "#/components/schemas/UnitDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get a Unit.",
        "tags": ["Units"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "patch": {
        "operationId": "sta_views_unit_update_unit",
        "summary": "Update Unit",
        "parameters": [
          {
            "in": "path",
            "name": "unit_id",
            "schema": {
              "format": "uuid",
              "title": "Unit Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/UnitSummaryResponse" },
                    { "$ref": "#/components/schemas/UnitDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Update a Unit.",
        "tags": ["Units"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UnitPatchBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "sta_views_unit_delete_unit",
        "summary": "Delete Unit",
        "parameters": [
          {
            "in": "path",
            "name": "unit_id",
            "schema": {
              "format": "uuid",
              "title": "Unit Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Delete a Unit.",
        "tags": ["Units"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/sensors": {
      "get": {
        "operationId": "sta_views_sensor_get_sensors",
        "summary": "Get Sensors",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "enum": [
                      "name",
                      "encodingType",
                      "manufacturer",
                      "model",
                      "methodType",
                      "methodCode",
                      "-name",
                      "-encodingType",
                      "-manufacturer",
                      "-model",
                      "-methodType",
                      "-methodCode"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                { "type": "null" }
              ],
              "default": [],
              "description": "Select one or more fields to order the response by.",
              "title": "Order By"
            },
            "required": false,
            "description": "Select one or more fields to order the response by."
          },
          {
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "default": [],
              "description": "Filter sensors by workspace ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Workspace Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter sensors by workspace ID."
          },
          {
            "in": "query",
            "name": "thing_id",
            "schema": {
              "default": [],
              "description": "Filter sensors by thing ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Thing Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter sensors by thing ID."
          },
          {
            "in": "query",
            "name": "datastream_id",
            "schema": {
              "default": [],
              "description": "Filter sensors by datastream ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Datastream Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter sensors by datastream ID."
          },
          {
            "in": "query",
            "name": "encoding_type",
            "schema": {
              "default": [],
              "description": "Filter sensors by encodingType",
              "items": { "type": "string" },
              "title": "Encoding Type",
              "type": "array"
            },
            "required": false,
            "description": "Filter sensors by encodingType"
          },
          {
            "in": "query",
            "name": "manufacturer",
            "schema": {
              "default": [],
              "description": "Filter sensors by manufacturer",
              "items": { "type": "string" },
              "title": "Manufacturer",
              "type": "array"
            },
            "required": false,
            "description": "Filter sensors by manufacturer"
          },
          {
            "in": "query",
            "name": "method_type",
            "schema": {
              "default": [],
              "description": "Filter sensors by methodType",
              "items": { "type": "string" },
              "title": "Method Type",
              "type": "array"
            },
            "required": false,
            "description": "Filter sensors by methodType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/SensorSummaryResponse"
                      },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/SensorDetailResponse"
                      },
                      "type": "array"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get public Sensors and Sensors associated with the authenticated user.",
        "tags": ["Sensors"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "sta_views_sensor_create_sensor",
        "summary": "Create Sensor",
        "parameters": [
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/SensorSummaryResponse" },
                    { "$ref": "#/components/schemas/SensorDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Create a new Sensor.",
        "tags": ["Sensors"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SensorPostBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/sensors/encoding-types": {
      "get": {
        "operationId": "sta_views_sensor_get_sensor_encoding_types",
        "summary": "Get Sensor Encoding Types",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "order_desc",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "description": "Sort terms by descending.",
              "title": "Order Desc"
            },
            "required": false,
            "description": "Sort terms by descending."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Get sensor encoding types.",
        "tags": ["Sensors"]
      }
    },
    "/api/data/sensors/method-types": {
      "get": {
        "operationId": "sta_views_sensor_get_method_types",
        "summary": "Get Method Types",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "order_desc",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "description": "Sort terms by descending.",
              "title": "Order Desc"
            },
            "required": false,
            "description": "Sort terms by descending."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Get method types.",
        "tags": ["Sensors"]
      }
    },
    "/api/data/sensors/{sensor_id}": {
      "get": {
        "operationId": "sta_views_sensor_get_sensor",
        "summary": "Get Sensor",
        "parameters": [
          {
            "in": "path",
            "name": "sensor_id",
            "schema": {
              "format": "uuid",
              "title": "Sensor Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/SensorSummaryResponse" },
                    { "$ref": "#/components/schemas/SensorDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get a Sensor.",
        "tags": ["Sensors"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "patch": {
        "operationId": "sta_views_sensor_update_sensor",
        "summary": "Update Sensor",
        "parameters": [
          {
            "in": "path",
            "name": "sensor_id",
            "schema": {
              "format": "uuid",
              "title": "Sensor Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/SensorSummaryResponse" },
                    { "$ref": "#/components/schemas/SensorDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Update a Sensor.",
        "tags": ["Sensors"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SensorPatchBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "sta_views_sensor_delete_sensor",
        "summary": "Delete Sensor",
        "parameters": [
          {
            "in": "path",
            "name": "sensor_id",
            "schema": {
              "format": "uuid",
              "title": "Sensor Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Delete a Sensor.",
        "tags": ["Sensors"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/processing-levels": {
      "get": {
        "operationId": "sta_views_processing_level_get_processing_levels",
        "summary": "Get Processing Levels",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "anyOf": [
                {
                  "items": { "enum": ["code", "-code"], "type": "string" },
                  "type": "array"
                },
                { "type": "null" }
              ],
              "default": [],
              "description": "Select one or more fields to order the response by.",
              "title": "Order By"
            },
            "required": false,
            "description": "Select one or more fields to order the response by."
          },
          {
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "default": [],
              "description": "Filter processing levels by workspace ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Workspace Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter processing levels by workspace ID."
          },
          {
            "in": "query",
            "name": "thing_id",
            "schema": {
              "default": [],
              "description": "Filter processing levels by thing ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Thing Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter processing levels by thing ID."
          },
          {
            "in": "query",
            "name": "datastream_id",
            "schema": {
              "default": [],
              "description": "Filter processing levels by datastream ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Datastream Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter processing levels by datastream ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/ProcessingLevelSummaryResponse"
                      },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/ProcessingLevelDetailResponse"
                      },
                      "type": "array"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get public Processing Levels and Processing Levels associated with the authenticated user.",
        "tags": ["Processing Levels"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "sta_views_processing_level_create_processing_level",
        "summary": "Create Processing Level",
        "parameters": [
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ProcessingLevelSummaryResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ProcessingLevelDetailResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Create a new Processing Level.",
        "tags": ["Processing Levels"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessingLevelPostBody"
              }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/processing-levels/{processing_level_id}": {
      "get": {
        "operationId": "sta_views_processing_level_get_processing_level",
        "summary": "Get Processing Level",
        "parameters": [
          {
            "in": "path",
            "name": "processing_level_id",
            "schema": {
              "format": "uuid",
              "title": "Processing Level Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ProcessingLevelSummaryResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ProcessingLevelDetailResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get a Processing Level.",
        "tags": ["Processing Levels"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "patch": {
        "operationId": "sta_views_processing_level_update_processing_level",
        "summary": "Update Processing Level",
        "parameters": [
          {
            "in": "path",
            "name": "processing_level_id",
            "schema": {
              "format": "uuid",
              "title": "Processing Level Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ProcessingLevelSummaryResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ProcessingLevelDetailResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Update a Processing Level.",
        "tags": ["Processing Levels"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessingLevelPatchBody"
              }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "sta_views_processing_level_delete_processing_level",
        "summary": "Delete Processing Level",
        "parameters": [
          {
            "in": "path",
            "name": "processing_level_id",
            "schema": {
              "format": "uuid",
              "title": "Processing Level Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Delete a Processing Level.",
        "tags": ["Processing Levels"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/result-qualifiers": {
      "get": {
        "operationId": "sta_views_result_qualifier_get_result_qualifiers",
        "summary": "Get Result Qualifiers",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "anyOf": [
                {
                  "items": { "enum": ["code", "-code"], "type": "string" },
                  "type": "array"
                },
                { "type": "null" }
              ],
              "default": [],
              "description": "Select one or more fields to order the response by.",
              "title": "Order By"
            },
            "required": false,
            "description": "Select one or more fields to order the response by."
          },
          {
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "default": [],
              "description": "Filter sensors by workspace ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Workspace Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter sensors by workspace ID."
          },
          {
            "in": "query",
            "name": "thing_id",
            "schema": {
              "default": [],
              "description": "Filter result qualifiers by thing ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Thing Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter result qualifiers by thing ID."
          },
          {
            "in": "query",
            "name": "datastream_id",
            "schema": {
              "default": [],
              "description": "Filter result qualifiers by datastream ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Datastream Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter result qualifiers by datastream ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/ResultQualifierSummaryResponse"
                      },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/ResultQualifierDetailResponse"
                      },
                      "type": "array"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get public Result Qualifiers and Result Qualifiers associated with the authenticated user.",
        "tags": ["Result Qualifiers"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "sta_views_result_qualifier_create_result_qualifier",
        "summary": "Create Result Qualifier",
        "parameters": [
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ResultQualifierSummaryResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ResultQualifierDetailResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Create a new Result Qualifier.",
        "tags": ["Result Qualifiers"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResultQualifierPostBody"
              }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/result-qualifiers/{result_qualifier_id}": {
      "get": {
        "operationId": "sta_views_result_qualifier_get_result_qualifier",
        "summary": "Get Result Qualifier",
        "parameters": [
          {
            "in": "path",
            "name": "result_qualifier_id",
            "schema": {
              "format": "uuid",
              "title": "Result Qualifier Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ResultQualifierSummaryResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ResultQualifierDetailResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get a Result Qualifier.",
        "tags": ["Result Qualifiers"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "patch": {
        "operationId": "sta_views_result_qualifier_update_result_qualifier",
        "summary": "Update Result Qualifier",
        "parameters": [
          {
            "in": "path",
            "name": "result_qualifier_id",
            "schema": {
              "format": "uuid",
              "title": "Result Qualifier Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ResultQualifierSummaryResponse"
                    },
                    {
                      "$ref": "#/components/schemas/ResultQualifierDetailResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Update a Result Qualifier.",
        "tags": ["Result Qualifiers"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResultQualifierPatchBody"
              }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "sta_views_result_qualifier_delete_result_qualifier",
        "summary": "Delete Result Qualifier",
        "parameters": [
          {
            "in": "path",
            "name": "result_qualifier_id",
            "schema": {
              "format": "uuid",
              "title": "Result Qualifier Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Delete a Result Qualifier.",
        "tags": ["Result Qualifiers"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/orchestration-systems": {
      "get": {
        "operationId": "etl_views_orchestration_system_get_orchestration_systems",
        "summary": "Get Orchestration Systems",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "enum": ["name", "type", "-name", "-type"],
                    "type": "string"
                  },
                  "type": "array"
                },
                { "type": "null" }
              ],
              "default": [],
              "description": "Select one or more fields to order the response by.",
              "title": "Order By"
            },
            "required": false,
            "description": "Select one or more fields to order the response by."
          },
          {
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "default": [],
              "description": "Filter sensors by workspace ID.",
              "items": {
                "anyOf": [
                  { "format": "uuid", "type": "string" },
                  { "const": "null", "enum": ["null"], "type": "string" }
                ]
              },
              "title": "Workspace Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter sensors by workspace ID."
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "default": [],
              "description": "Filter orchestration systems by type.",
              "items": { "type": "string" },
              "title": "Type",
              "type": "array"
            },
            "required": false,
            "description": "Filter orchestration systems by type."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/OrchestrationSystemSummaryResponse"
                      },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/OrchestrationSystemDetailResponse"
                      },
                      "type": "array"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get public Orchestration Systems and Orchestration Systems associated with the authenticated user.",
        "tags": ["Orchestration Systems"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "etl_views_orchestration_system_create_orchestration_system",
        "summary": "Create Orchestration System",
        "parameters": [
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/OrchestrationSystemSummaryResponse"
                    },
                    {
                      "$ref": "#/components/schemas/OrchestrationSystemDetailResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Create a new Orchestration System.",
        "tags": ["Orchestration Systems"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrchestrationSystemPostBody"
              }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/orchestration-systems/{orchestration_system_id}": {
      "get": {
        "operationId": "etl_views_orchestration_system_get_orchestration_system",
        "summary": "Get Orchestration System",
        "parameters": [
          {
            "in": "path",
            "name": "orchestration_system_id",
            "schema": {
              "format": "uuid",
              "title": "Orchestration System Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/OrchestrationSystemSummaryResponse"
                    },
                    {
                      "$ref": "#/components/schemas/OrchestrationSystemDetailResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get an Orchestration System.",
        "tags": ["Orchestration Systems"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "patch": {
        "operationId": "etl_views_orchestration_system_update_orchestration_system",
        "summary": "Update Orchestration System",
        "parameters": [
          {
            "in": "path",
            "name": "orchestration_system_id",
            "schema": {
              "format": "uuid",
              "title": "Orchestration System Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/OrchestrationSystemSummaryResponse"
                    },
                    {
                      "$ref": "#/components/schemas/OrchestrationSystemDetailResponse"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Update an Orchestration System.",
        "tags": ["Orchestration Systems"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrchestrationSystemPatchBody"
              }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "etl_views_orchestration_system_delete_orchestration_system",
        "summary": "Delete Orchestration System",
        "parameters": [
          {
            "in": "path",
            "name": "orchestration_system_id",
            "schema": {
              "format": "uuid",
              "title": "Orchestration System Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Delete an Orchestration System.",
        "tags": ["Orchestration Systems"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/data-sources": {
      "get": {
        "operationId": "etl_views_data_source_get_data_sources",
        "summary": "Get Data Sources",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "enum": [
                      "name",
                      "startTime",
                      "endTime",
                      "-name",
                      "-startTime",
                      "-endTime"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                { "type": "null" }
              ],
              "default": [],
              "description": "Select one or more fields to order the response by.",
              "title": "Order By"
            },
            "required": false,
            "description": "Select one or more fields to order the response by."
          },
          {
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "default": [],
              "description": "Filter by workspace ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Workspace Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter by workspace ID."
          },
          {
            "in": "query",
            "name": "orchestration_system_id",
            "schema": {
              "default": [],
              "description": "Filter by orchestration system ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Orchestration System Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter by orchestration system ID."
          },
          {
            "in": "query",
            "name": "datastream_id",
            "schema": {
              "default": [],
              "description": "Filter by associated datastream ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Datastream Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter by associated datastream ID."
          },
          {
            "in": "query",
            "name": "last_run_successful",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Filters by whether the previous job ran successfully.",
              "title": "Last Run Successful"
            },
            "required": false,
            "description": "Filters by whether the previous job ran successfully."
          },
          {
            "in": "query",
            "name": "last_run_max",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the maximum last run time of filtered datastreams.",
              "title": "Last Run Max"
            },
            "required": false,
            "description": "Sets the maximum last run time of filtered datastreams."
          },
          {
            "in": "query",
            "name": "last_run_min",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the minimum last run time of filtered datastreams.",
              "title": "Last Run Min"
            },
            "required": false,
            "description": "Sets the minimum last run time of filtered datastreams."
          },
          {
            "in": "query",
            "name": "next_run_max",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the maximum next run time of filtered datastreams.",
              "title": "Next Run Max"
            },
            "required": false,
            "description": "Sets the maximum next run time of filtered datastreams."
          },
          {
            "in": "query",
            "name": "next_run_min",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the minimum next run time of filtered datastreams.",
              "title": "Next Run Min"
            },
            "required": false,
            "description": "Sets the minimum next run time of filtered datastreams."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/DataSourceSummaryResponse"
                      },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/DataSourceDetailResponse"
                      },
                      "type": "array"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get public Data Sources and Data Sources associated with the authenticated user.",
        "tags": ["Data Sources"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "etl_views_data_source_create_data_source",
        "summary": "Create Data Source",
        "parameters": [
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DataSourceSummaryResponse"
                    },
                    { "$ref": "#/components/schemas/DataSourceDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Create a new Data Source.",
        "tags": ["Data Sources"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DataSourcePostBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/data-sources/{data_source_id}": {
      "get": {
        "operationId": "etl_views_data_source_get_data_source",
        "summary": "Get Data Source",
        "parameters": [
          {
            "in": "path",
            "name": "data_source_id",
            "schema": {
              "format": "uuid",
              "title": "Data Source Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DataSourceSummaryResponse"
                    },
                    { "$ref": "#/components/schemas/DataSourceDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get a Data Source.",
        "tags": ["Data Sources"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "patch": {
        "operationId": "etl_views_data_source_update_data_source",
        "summary": "Update Data Source",
        "parameters": [
          {
            "in": "path",
            "name": "data_source_id",
            "schema": {
              "format": "uuid",
              "title": "Data Source Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DataSourceSummaryResponse"
                    },
                    { "$ref": "#/components/schemas/DataSourceDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Update a Data Source.",
        "tags": ["Data Sources"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DataSourcePatchBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "etl_views_data_source_delete_data_source",
        "summary": "Delete Data Source",
        "parameters": [
          {
            "in": "path",
            "name": "data_source_id",
            "schema": {
              "format": "uuid",
              "title": "Data Source Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Delete a Data Source.",
        "tags": ["Data Sources"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/data-sources/{data_source_id}/datastreams/{datastream_id}": {
      "post": {
        "operationId": "etl_views_data_source_link_datastream",
        "summary": "Link Datastream",
        "parameters": [
          {
            "in": "path",
            "name": "data_source_id",
            "schema": {
              "format": "uuid",
              "title": "Data Source Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Link a Datastream to a Data Source.",
        "tags": ["Data Sources"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "etl_views_data_source_unlink_datastream",
        "summary": "Unlink Datastream",
        "parameters": [
          {
            "in": "path",
            "name": "data_source_id",
            "schema": {
              "format": "uuid",
              "title": "Data Source Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Unlink a Datastream from a Data Source.",
        "tags": ["Data Sources"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/data-archives": {
      "get": {
        "operationId": "etl_views_data_archive_get_data_archives",
        "summary": "Get Data Archives",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "anyOf": [
                { "minimum": 1, "type": "integer" },
                { "type": "null" }
              ],
              "description": "Page number (1-based).",
              "title": "Page"
            },
            "required": false,
            "description": "Page number (1-based)."
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "anyOf": [
                { "maximum": 100000, "minimum": 0, "type": "integer" },
                { "type": "null" }
              ],
              "description": "The number of items per page.",
              "title": "Page Size"
            },
            "required": false,
            "description": "The number of items per page."
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "enum": [
                      "name",
                      "startTime",
                      "endTime",
                      "-name",
                      "-startTime",
                      "-endTime"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                { "type": "null" }
              ],
              "default": [],
              "description": "Select one or more fields to order the response by.",
              "title": "Order By"
            },
            "required": false,
            "description": "Select one or more fields to order the response by."
          },
          {
            "in": "query",
            "name": "workspace_id",
            "schema": {
              "default": [],
              "description": "Filter by workspace ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Workspace Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter by workspace ID."
          },
          {
            "in": "query",
            "name": "orchestration_system_id",
            "schema": {
              "default": [],
              "description": "Filter by orchestration system ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Orchestration System Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter by orchestration system ID."
          },
          {
            "in": "query",
            "name": "datastream_id",
            "schema": {
              "default": [],
              "description": "Filter by associated datastream ID.",
              "items": { "format": "uuid", "type": "string" },
              "title": "Datastream Id",
              "type": "array"
            },
            "required": false,
            "description": "Filter by associated datastream ID."
          },
          {
            "in": "query",
            "name": "last_run_successful",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Filters by whether the previous job ran successfully.",
              "title": "Last Run Successful"
            },
            "required": false,
            "description": "Filters by whether the previous job ran successfully."
          },
          {
            "in": "query",
            "name": "last_run_max",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the maximum last run time of filtered datastreams.",
              "title": "Last Run Max"
            },
            "required": false,
            "description": "Sets the maximum last run time of filtered datastreams."
          },
          {
            "in": "query",
            "name": "last_run_min",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the minimum last run time of filtered datastreams.",
              "title": "Last Run Min"
            },
            "required": false,
            "description": "Sets the minimum last run time of filtered datastreams."
          },
          {
            "in": "query",
            "name": "next_run_max",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the maximum next run time of filtered datastreams.",
              "title": "Next Run Max"
            },
            "required": false,
            "description": "Sets the maximum next run time of filtered datastreams."
          },
          {
            "in": "query",
            "name": "next_run_min",
            "schema": {
              "anyOf": [
                { "type": "string" },
                { "format": "date-time", "type": "string" },
                { "type": "null" }
              ],
              "description": "Sets the minimum next run time of filtered datastreams.",
              "title": "Next Run Min"
            },
            "required": false,
            "description": "Sets the minimum next run time of filtered datastreams."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/DataArchiveSummaryResponse"
                      },
                      "type": "array"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/DataArchiveDetailResponse"
                      },
                      "type": "array"
                    }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get public Data Archives and Data Archives associated with the authenticated user.",
        "tags": ["Data Archives"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "post": {
        "operationId": "etl_views_data_archive_create_data_archive",
        "summary": "Create Data Archive",
        "parameters": [
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DataArchiveSummaryResponse"
                    },
                    { "$ref": "#/components/schemas/DataArchiveDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Create a new Data Archive.",
        "tags": ["Data Archives"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DataArchivePostBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/data-archives/{data_archive_id}": {
      "get": {
        "operationId": "etl_views_data_archive_get_data_archive",
        "summary": "Get Data Archive",
        "parameters": [
          {
            "in": "path",
            "name": "data_archive_id",
            "schema": {
              "format": "uuid",
              "title": "Data Archive Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DataArchiveSummaryResponse"
                    },
                    { "$ref": "#/components/schemas/DataArchiveDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Get a Data Archive.",
        "tags": ["Data Archives"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "patch": {
        "operationId": "etl_views_data_archive_update_data_archive",
        "summary": "Update Data Archive",
        "parameters": [
          {
            "in": "path",
            "name": "data_archive_id",
            "schema": {
              "format": "uuid",
              "title": "Data Archive Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "expand_related",
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Expand Related"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DataArchiveSummaryResponse"
                    },
                    { "$ref": "#/components/schemas/DataArchiveDetailResponse" }
                  ],
                  "title": "Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Update a Data Archive.",
        "tags": ["Data Archives"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DataArchivePatchBody" }
            }
          },
          "required": true
        },
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "etl_views_data_archive_delete_data_archive",
        "summary": "Delete Data Archive",
        "parameters": [
          {
            "in": "path",
            "name": "data_archive_id",
            "schema": {
              "format": "uuid",
              "title": "Data Archive Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Delete a Data Archive.",
        "tags": ["Data Archives"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    },
    "/api/data/data-archives/{data_archive_id}/datastreams/{datastream_id}": {
      "post": {
        "operationId": "etl_views_data_archive_link_datastream",
        "summary": "Link Datastream",
        "parameters": [
          {
            "in": "path",
            "name": "data_archive_id",
            "schema": {
              "format": "uuid",
              "title": "Data Archive Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Link a Datastream to a Data Archive.",
        "tags": ["Data Archives"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      },
      "delete": {
        "operationId": "etl_views_data_archive_unlink_datastream",
        "summary": "Unlink Datastream",
        "parameters": [
          {
            "in": "path",
            "name": "data_archive_id",
            "schema": {
              "format": "uuid",
              "title": "Data Archive Id",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "datastream_id",
            "schema": {
              "format": "uuid",
              "title": "Datastream Id",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "title": "Response", "type": "string" }
              }
            }
          }
        },
        "description": "Unlink a Datastream from a Data Archive.",
        "tags": ["Data Archives"],
        "security": [
          { "SessionAuth": [] },
          { "BearerAuth": [] },
          { "APIKeyAuth": [] }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "WorkspaceQueryParameters": {
        "properties": {
          "page": {
            "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
            "description": "Page number (1-based).",
            "title": "Page"
          },
          "page_size": {
            "anyOf": [
              { "maximum": 100000, "minimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "description": "The number of items per page.",
            "title": "Page Size"
          },
          "expand_related": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Expand Related"
          },
          "order_by": {
            "anyOf": [
              {
                "items": {
                  "enum": ["name", "isPrivate", "-name", "-isPrivate"],
                  "type": "string"
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": [],
            "description": "Select one or more fields to order the response by.",
            "title": "Order By"
          },
          "is_associated": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "description": "Whether the workspace is associated with the authenticated user",
            "title": "Is Associated"
          },
          "is_private": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "description": "Whether the returned workspaces should be private or public.",
            "title": "Is Private"
          }
        },
        "title": "WorkspaceQueryParameters",
        "type": "object"
      },
      "AccountContactDetailResponse": {
        "properties": {
          "phone": {
            "anyOf": [
              { "maxLength": 15, "type": "string" },
              { "type": "null" }
            ],
            "title": "Phone"
          },
          "address": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Address"
          },
          "link": {
            "anyOf": [
              { "maxLength": 2000, "type": "string" },
              { "type": "null" }
            ],
            "title": "Link"
          },
          "type": { "maxLength": 255, "title": "Type", "type": "string" },
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "email": { "format": "email", "title": "Email", "type": "string" },
          "organizationName": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Organizationname"
          }
        },
        "required": ["type", "name", "email"],
        "title": "AccountContactDetailResponse",
        "type": "object"
      },
      "PermissionDetailResponse": {
        "properties": {
          "resource": {
            "enum": [
              "*",
              "APIKey",
              "Role",
              "Collaborator",
              "DataSource",
              "DataArchive",
              "OrchestrationSystem",
              "Thing",
              "Datastream",
              "Observation",
              "Sensor",
              "ObservedProperty",
              "ProcessingLevel",
              "Unit",
              "ResultQualifier"
            ],
            "title": "Resource",
            "type": "string"
          },
          "action": {
            "enum": ["*", "view", "create", "edit", "delete"],
            "title": "Action",
            "type": "string"
          }
        },
        "required": ["resource", "action"],
        "title": "PermissionDetailResponse",
        "type": "object"
      },
      "RoleDetailResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "isUserRole": { "title": "Isuserrole", "type": "boolean" },
          "isAPIKeyRole": { "title": "Isapikeyrole", "type": "boolean" },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspace": {
            "anyOf": [
              { "$ref": "#/components/schemas/WorkspaceDetailResponse" },
              { "type": "null" }
            ]
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/PermissionDetailResponse"
            },
            "title": "Permissions",
            "type": "array"
          }
        },
        "required": [
          "name",
          "description",
          "isUserRole",
          "isAPIKeyRole",
          "id",
          "workspace",
          "permissions"
        ],
        "title": "RoleDetailResponse",
        "type": "object"
      },
      "WorkspaceDetailResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "isPrivate": { "title": "Isprivate", "type": "boolean" },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "owner": {
            "$ref": "#/components/schemas/AccountContactDetailResponse"
          },
          "collaboratorRole": {
            "anyOf": [
              { "$ref": "#/components/schemas/RoleDetailResponse" },
              { "type": "null" }
            ]
          },
          "pendingTransferTo": {
            "anyOf": [
              { "$ref": "#/components/schemas/AccountContactDetailResponse" },
              { "type": "null" }
            ]
          }
        },
        "required": ["name", "isPrivate", "id", "owner"],
        "title": "WorkspaceDetailResponse",
        "type": "object"
      },
      "WorkspaceSummaryResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "isPrivate": { "title": "Isprivate", "type": "boolean" },
          "id": { "format": "uuid", "title": "Id", "type": "string" }
        },
        "required": ["name", "isPrivate", "id"],
        "title": "WorkspaceSummaryResponse",
        "type": "object"
      },
      "WorkspacePostBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "isPrivate": { "title": "Isprivate", "type": "boolean" }
        },
        "required": ["name", "isPrivate"],
        "title": "WorkspacePostBody",
        "type": "object"
      },
      "WorkspacePatchBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "isPrivate": { "title": "Isprivate", "type": "boolean" }
        },
        "title": "WorkspacePatchBody",
        "type": "object"
      },
      "WorkspaceTransferBody": {
        "properties": {
          "newOwner": {
            "format": "email",
            "title": "Newowner",
            "type": "string"
          }
        },
        "required": ["newOwner"],
        "title": "WorkspaceTransferBody",
        "type": "object"
      },
      "CollaboratorQueryParameters": {
        "properties": {
          "page": {
            "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
            "description": "Page number (1-based).",
            "title": "Page"
          },
          "page_size": {
            "anyOf": [
              { "maximum": 100000, "minimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "description": "The number of items per page.",
            "title": "Page Size"
          },
          "role_id": {
            "default": [],
            "description": "Filter collaborators by role ID.",
            "items": { "format": "uuid", "type": "string" },
            "title": "Role Id",
            "type": "array"
          }
        },
        "title": "CollaboratorQueryParameters",
        "type": "object"
      },
      "CollaboratorDetailResponse": {
        "properties": {
          "user": {
            "$ref": "#/components/schemas/AccountContactDetailResponse"
          },
          "role": { "$ref": "#/components/schemas/RoleSummaryResponse" }
        },
        "required": ["user", "role"],
        "title": "CollaboratorDetailResponse",
        "type": "object"
      },
      "RoleSummaryResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "isUserRole": { "title": "Isuserrole", "type": "boolean" },
          "isAPIKeyRole": { "title": "Isapikeyrole", "type": "boolean" },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspaceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Workspaceid"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/PermissionDetailResponse"
            },
            "title": "Permissions",
            "type": "array"
          }
        },
        "required": [
          "name",
          "description",
          "isUserRole",
          "isAPIKeyRole",
          "id",
          "workspaceId",
          "permissions"
        ],
        "title": "RoleSummaryResponse",
        "type": "object"
      },
      "CollaboratorPostBody": {
        "properties": {
          "email": { "format": "email", "title": "Email", "type": "string" },
          "roleId": { "format": "uuid", "title": "Roleid", "type": "string" }
        },
        "required": ["email", "roleId"],
        "title": "CollaboratorPostBody",
        "type": "object"
      },
      "CollaboratorDeleteBody": {
        "properties": {
          "email": { "format": "email", "title": "Email", "type": "string" }
        },
        "required": ["email"],
        "title": "CollaboratorDeleteBody",
        "type": "object"
      },
      "APIKeyQueryParameters": {
        "properties": {
          "page": {
            "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
            "description": "Page number (1-based).",
            "title": "Page"
          },
          "page_size": {
            "anyOf": [
              { "maximum": 100000, "minimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "description": "The number of items per page.",
            "title": "Page Size"
          },
          "expand_related": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Expand Related"
          },
          "order_by": {
            "anyOf": [
              {
                "items": {
                  "enum": [
                    "name",
                    "isActive",
                    "expiresAt",
                    "-name",
                    "-isActive",
                    "-expiresAt"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": [],
            "description": "Select one or more fields to order the response by.",
            "title": "Order By"
          },
          "role_id": {
            "default": [],
            "description": "Filter API keys by role ID.",
            "items": { "format": "uuid", "type": "string" },
            "title": "Role Id",
            "type": "array"
          }
        },
        "title": "APIKeyQueryParameters",
        "type": "object"
      },
      "APIKeyDetailResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "isActive": { "title": "Isactive", "type": "boolean" },
          "expiresAt": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Expiresat"
          },
          "createdAt": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" }
            ],
            "title": "Createdat"
          },
          "lastUsed": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Lastused"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspace": {
            "$ref": "#/components/schemas/WorkspaceSummaryResponse"
          },
          "role": { "$ref": "#/components/schemas/RoleSummaryResponse" }
        },
        "required": [
          "name",
          "isActive",
          "createdAt",
          "lastUsed",
          "id",
          "workspace",
          "role"
        ],
        "title": "APIKeyDetailResponse",
        "type": "object"
      },
      "APIKeySummaryResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "isActive": { "title": "Isactive", "type": "boolean" },
          "expiresAt": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Expiresat"
          },
          "createdAt": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" }
            ],
            "title": "Createdat"
          },
          "lastUsed": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Lastused"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspaceId": {
            "format": "uuid",
            "title": "Workspaceid",
            "type": "string"
          },
          "roleId": { "format": "uuid", "title": "Roleid", "type": "string" }
        },
        "required": [
          "name",
          "isActive",
          "createdAt",
          "lastUsed",
          "id",
          "workspaceId",
          "roleId"
        ],
        "title": "APIKeySummaryResponse",
        "type": "object"
      },
      "APIKeyDetailPostResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "isActive": { "title": "Isactive", "type": "boolean" },
          "expiresAt": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Expiresat"
          },
          "createdAt": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" }
            ],
            "title": "Createdat"
          },
          "lastUsed": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Lastused"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspace": {
            "$ref": "#/components/schemas/WorkspaceSummaryResponse"
          },
          "role": { "$ref": "#/components/schemas/RoleSummaryResponse" },
          "key": { "maxLength": 255, "title": "Key", "type": "string" }
        },
        "required": [
          "name",
          "isActive",
          "createdAt",
          "lastUsed",
          "id",
          "workspace",
          "role",
          "key"
        ],
        "title": "APIKeyDetailPostResponse",
        "type": "object"
      },
      "APIKeySummaryPostResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "isActive": { "title": "Isactive", "type": "boolean" },
          "expiresAt": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Expiresat"
          },
          "createdAt": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" }
            ],
            "title": "Createdat"
          },
          "lastUsed": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Lastused"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspaceId": {
            "format": "uuid",
            "title": "Workspaceid",
            "type": "string"
          },
          "roleId": { "format": "uuid", "title": "Roleid", "type": "string" },
          "key": { "maxLength": 255, "title": "Key", "type": "string" }
        },
        "required": [
          "name",
          "isActive",
          "createdAt",
          "lastUsed",
          "id",
          "workspaceId",
          "roleId",
          "key"
        ],
        "title": "APIKeySummaryPostResponse",
        "type": "object"
      },
      "APIKeyPostBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "isActive": { "title": "Isactive", "type": "boolean" },
          "expiresAt": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Expiresat"
          },
          "roleId": { "format": "uuid", "title": "Roleid", "type": "string" }
        },
        "required": ["name", "isActive", "roleId"],
        "title": "APIKeyPostBody",
        "type": "object"
      },
      "APIKeyPatchBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "isActive": { "title": "Isactive", "type": "boolean" },
          "expiresAt": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Expiresat"
          },
          "roleId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Roleid"
          }
        },
        "title": "APIKeyPatchBody",
        "type": "object"
      },
      "RoleQueryParameters": {
        "properties": {
          "page": {
            "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
            "description": "Page number (1-based).",
            "title": "Page"
          },
          "page_size": {
            "anyOf": [
              { "maximum": 100000, "minimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "description": "The number of items per page.",
            "title": "Page Size"
          },
          "expand_related": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Expand Related"
          },
          "order_by": {
            "anyOf": [
              {
                "items": {
                  "enum": [
                    "name",
                    "isUserRole",
                    "isAPIKeyRole",
                    "-name",
                    "-isUserRole",
                    "-isAPIKeyRole"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": [],
            "description": "Select one or more fields to order the response by.",
            "title": "Order By"
          },
          "workspace_id": {
            "default": [],
            "description": "Filter roles by workspace ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Workspace Id",
            "type": "array"
          },
          "is_user_role": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "description": "Controls whether the returned roles should be user roles.",
            "title": "Is User Role"
          },
          "is_apikey_role": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "description": "Controls whether the returned roles should be API key roles.",
            "title": "Is Apikey Role"
          }
        },
        "title": "RoleQueryParameters",
        "type": "object"
      },
      "ThingQueryParameters": {
        "properties": {
          "page": {
            "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
            "description": "Page number (1-based).",
            "title": "Page"
          },
          "page_size": {
            "anyOf": [
              { "maximum": 100000, "minimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "description": "The number of items per page.",
            "title": "Page Size"
          },
          "expand_related": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Expand Related"
          },
          "order_by": {
            "anyOf": [
              {
                "items": {
                  "enum": [
                    "name",
                    "samplingFeatureType",
                    "samplingFeatureCode",
                    "siteType",
                    "isPrivate",
                    "latitude",
                    "longitude",
                    "elevation_m",
                    "elevationDatum",
                    "state",
                    "county",
                    "country",
                    "-name",
                    "-samplingFeatureType",
                    "-samplingFeatureCode",
                    "-siteType",
                    "-isPrivate",
                    "-latitude",
                    "-longitude",
                    "-elevation_m",
                    "-elevationDatum",
                    "-state",
                    "-county",
                    "-country"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": [],
            "description": "Select one or more fields to order the response by.",
            "title": "Order By"
          },
          "workspace_id": {
            "default": [],
            "description": "Filter things by workspace ID.",
            "items": { "format": "uuid", "type": "string" },
            "title": "Workspace Id",
            "type": "array"
          },
          "bbox": {
            "default": [],
            "description": "Filter things by bounding box. Format bounding box as {min_lon},{min_lat},{max_lon},{max_lat}",
            "items": { "type": "string" },
            "title": "Bbox",
            "type": "array"
          },
          "state": {
            "default": [],
            "description": "Filter things by state.",
            "items": { "type": "string" },
            "title": "State",
            "type": "array"
          },
          "county": {
            "default": [],
            "description": "Filter things by county.",
            "items": { "type": "string" },
            "title": "County",
            "type": "array"
          },
          "country": {
            "default": [],
            "description": "Filter things by country.",
            "items": { "type": "string" },
            "title": "Country",
            "type": "array"
          },
          "site_type": {
            "default": [],
            "description": "Filter things by site type.",
            "items": { "type": "string" },
            "title": "Site Type",
            "type": "array"
          },
          "sampling_feature_type": {
            "default": [],
            "description": "Filter things by sampling feature type.",
            "items": { "type": "string" },
            "title": "Sampling Feature Type",
            "type": "array"
          },
          "tag": {
            "default": [],
            "description": "Filter things by tag. Format tag filters as {key}:{value}",
            "items": { "type": "string" },
            "title": "Tag",
            "type": "array"
          },
          "is_private": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "description": "Controls whether the returned things should be private or public.",
            "title": "Is Private"
          }
        },
        "title": "ThingQueryParameters",
        "type": "object"
      },
      "FileAttachmentGetResponse": {
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "link": { "title": "Link", "type": "string" }
        },
        "required": ["name", "link"],
        "title": "FileAttachmentGetResponse",
        "type": "object"
      },
      "LocationDetailResponse": {
        "properties": {
          "latitude": {
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Latitude",
            "type": "number"
          },
          "longitude": {
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Longitude",
            "type": "number"
          },
          "elevation_m": {
            "anyOf": [
              { "maximum": 99999.0, "minimum": -99999.0, "type": "number" },
              { "type": "null" }
            ],
            "title": "Elevation M"
          },
          "elevationDatum": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Elevationdatum"
          },
          "state": {
            "anyOf": [
              { "maxLength": 200, "type": "string" },
              { "type": "null" }
            ],
            "title": "State"
          },
          "county": {
            "anyOf": [
              { "maxLength": 200, "type": "string" },
              { "type": "null" }
            ],
            "title": "County"
          },
          "country": {
            "anyOf": [{ "maxLength": 2, "type": "string" }, { "type": "null" }],
            "title": "Country"
          }
        },
        "required": ["latitude", "longitude"],
        "title": "LocationDetailResponse",
        "type": "object"
      },
      "TagGetResponse": {
        "properties": {
          "key": { "title": "Key", "type": "string" },
          "value": { "title": "Value", "type": "string" }
        },
        "required": ["key", "value"],
        "title": "TagGetResponse",
        "type": "object"
      },
      "ThingDetailResponse": {
        "properties": {
          "name": { "maxLength": 200, "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "samplingFeatureType": {
            "maxLength": 200,
            "title": "Samplingfeaturetype",
            "type": "string"
          },
          "samplingFeatureCode": {
            "maxLength": 200,
            "title": "Samplingfeaturecode",
            "type": "string"
          },
          "siteType": {
            "maxLength": 200,
            "title": "Sitetype",
            "type": "string"
          },
          "dataDisclaimer": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Datadisclaimer"
          },
          "isPrivate": { "title": "Isprivate", "type": "boolean" },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspace": {
            "$ref": "#/components/schemas/WorkspaceSummaryResponse"
          },
          "location": { "$ref": "#/components/schemas/LocationDetailResponse" },
          "tags": {
            "items": { "$ref": "#/components/schemas/TagGetResponse" },
            "title": "Tags",
            "type": "array"
          },
          "fileAttachments": {
            "items": {
              "$ref": "#/components/schemas/FileAttachmentGetResponse"
            },
            "title": "Fileattachments",
            "type": "array"
          }
        },
        "required": [
          "name",
          "description",
          "samplingFeatureType",
          "samplingFeatureCode",
          "siteType",
          "isPrivate",
          "id",
          "workspace",
          "location",
          "tags",
          "fileAttachments"
        ],
        "title": "ThingDetailResponse",
        "type": "object"
      },
      "ThingSummaryResponse": {
        "properties": {
          "name": { "maxLength": 200, "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "samplingFeatureType": {
            "maxLength": 200,
            "title": "Samplingfeaturetype",
            "type": "string"
          },
          "samplingFeatureCode": {
            "maxLength": 200,
            "title": "Samplingfeaturecode",
            "type": "string"
          },
          "siteType": {
            "maxLength": 200,
            "title": "Sitetype",
            "type": "string"
          },
          "dataDisclaimer": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Datadisclaimer"
          },
          "isPrivate": { "title": "Isprivate", "type": "boolean" },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspaceId": {
            "format": "uuid",
            "title": "Workspaceid",
            "type": "string"
          },
          "location": { "$ref": "#/components/schemas/LocationDetailResponse" },
          "tags": {
            "items": { "$ref": "#/components/schemas/TagGetResponse" },
            "title": "Tags",
            "type": "array"
          },
          "fileAttachments": {
            "items": {
              "$ref": "#/components/schemas/FileAttachmentGetResponse"
            },
            "title": "Fileattachments",
            "type": "array"
          }
        },
        "required": [
          "name",
          "description",
          "samplingFeatureType",
          "samplingFeatureCode",
          "siteType",
          "isPrivate",
          "id",
          "workspaceId",
          "location",
          "tags",
          "fileAttachments"
        ],
        "title": "ThingSummaryResponse",
        "type": "object"
      },
      "LocationPostBody": {
        "properties": {
          "latitude": {
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Latitude",
            "type": "number"
          },
          "longitude": {
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Longitude",
            "type": "number"
          },
          "elevation_m": {
            "anyOf": [
              { "maximum": 99999.0, "minimum": -99999.0, "type": "number" },
              { "type": "null" }
            ],
            "title": "Elevation M"
          },
          "elevationDatum": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Elevationdatum"
          },
          "state": {
            "anyOf": [
              { "maxLength": 200, "type": "string" },
              { "type": "null" }
            ],
            "title": "State"
          },
          "county": {
            "anyOf": [
              { "maxLength": 200, "type": "string" },
              { "type": "null" }
            ],
            "title": "County"
          },
          "country": {
            "anyOf": [{ "maxLength": 2, "type": "string" }, { "type": "null" }],
            "title": "Country"
          }
        },
        "required": ["latitude", "longitude"],
        "title": "LocationPostBody",
        "type": "object"
      },
      "ThingPostBody": {
        "properties": {
          "name": { "maxLength": 200, "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "samplingFeatureType": {
            "maxLength": 200,
            "title": "Samplingfeaturetype",
            "type": "string"
          },
          "samplingFeatureCode": {
            "maxLength": 200,
            "title": "Samplingfeaturecode",
            "type": "string"
          },
          "siteType": {
            "maxLength": 200,
            "title": "Sitetype",
            "type": "string"
          },
          "dataDisclaimer": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Datadisclaimer"
          },
          "isPrivate": { "title": "Isprivate", "type": "boolean" },
          "workspaceId": {
            "format": "uuid",
            "title": "Workspaceid",
            "type": "string"
          },
          "location": { "$ref": "#/components/schemas/LocationPostBody" }
        },
        "required": [
          "name",
          "description",
          "samplingFeatureType",
          "samplingFeatureCode",
          "siteType",
          "isPrivate",
          "workspaceId",
          "location"
        ],
        "title": "ThingPostBody",
        "type": "object"
      },
      "VocabularyQueryParameters": {
        "properties": {
          "page": {
            "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
            "description": "Page number (1-based).",
            "title": "Page"
          },
          "page_size": {
            "anyOf": [
              { "maximum": 100000, "minimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "description": "The number of items per page.",
            "title": "Page Size"
          },
          "order_desc": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "default": false,
            "description": "Sort terms by descending.",
            "title": "Order Desc"
          }
        },
        "title": "VocabularyQueryParameters",
        "type": "object"
      },
      "LocationPatchBody": {
        "properties": {
          "latitude": {
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Latitude",
            "type": "number"
          },
          "longitude": {
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Longitude",
            "type": "number"
          },
          "elevation_m": {
            "anyOf": [
              { "maximum": 99999.0, "minimum": -99999.0, "type": "number" },
              { "type": "null" }
            ],
            "title": "Elevation M"
          },
          "elevationDatum": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Elevationdatum"
          },
          "state": {
            "anyOf": [
              { "maxLength": 200, "type": "string" },
              { "type": "null" }
            ],
            "title": "State"
          },
          "county": {
            "anyOf": [
              { "maxLength": 200, "type": "string" },
              { "type": "null" }
            ],
            "title": "County"
          },
          "country": {
            "anyOf": [{ "maxLength": 2, "type": "string" }, { "type": "null" }],
            "title": "Country"
          }
        },
        "title": "LocationPatchBody",
        "type": "object"
      },
      "ThingPatchBody": {
        "properties": {
          "name": { "maxLength": 200, "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "samplingFeatureType": {
            "maxLength": 200,
            "title": "Samplingfeaturetype",
            "type": "string"
          },
          "samplingFeatureCode": {
            "maxLength": 200,
            "title": "Samplingfeaturecode",
            "type": "string"
          },
          "siteType": {
            "maxLength": 200,
            "title": "Sitetype",
            "type": "string"
          },
          "dataDisclaimer": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Datadisclaimer"
          },
          "isPrivate": { "title": "Isprivate", "type": "boolean" },
          "location": {
            "anyOf": [
              { "$ref": "#/components/schemas/LocationPatchBody" },
              { "type": "null" }
            ]
          }
        },
        "title": "ThingPatchBody",
        "type": "object"
      },
      "TagPostBody": {
        "properties": {
          "key": { "title": "Key", "type": "string" },
          "value": { "title": "Value", "type": "string" }
        },
        "required": ["key", "value"],
        "title": "TagPostBody",
        "type": "object"
      },
      "TagDeleteBody": {
        "properties": {
          "key": { "title": "Key", "type": "string" },
          "value": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Value"
          }
        },
        "required": ["key"],
        "title": "TagDeleteBody",
        "type": "object"
      },
      "FileAttachmentPostBody": {
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "fileAttachmentType": {
            "title": "Fileattachmenttype",
            "type": "string"
          }
        },
        "required": ["name", "fileAttachmentType"],
        "title": "FileAttachmentPostBody",
        "type": "object"
      },
      "FileAttachmentDeleteBody": {
        "properties": { "name": { "title": "Name", "type": "string" } },
        "required": ["name"],
        "title": "FileAttachmentDeleteBody",
        "type": "object"
      },
      "HydroShareArchivalDetailResponse": {
        "properties": {
          "link": {
            "anyOf": [
              { "format": "uri", "minLength": 1, "type": "string" },
              { "type": "null" }
            ],
            "title": "Link"
          },
          "frequency": {
            "anyOf": [
              { "enum": ["daily", "weekly", "monthly"], "type": "string" },
              { "type": "null" }
            ],
            "title": "Frequency"
          },
          "path": { "maxLength": 255, "title": "Path", "type": "string" },
          "datastreamIds": {
            "items": { "format": "uuid", "type": "string" },
            "title": "Datastreamids",
            "type": "array"
          },
          "thingId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Thingid"
          }
        },
        "required": ["path", "datastreamIds", "thingId"],
        "title": "HydroShareArchivalDetailResponse",
        "type": "object"
      },
      "HydroShareArchivalPostBody": {
        "properties": {
          "link": {
            "anyOf": [
              { "format": "uri", "minLength": 1, "type": "string" },
              { "type": "null" }
            ],
            "title": "Link"
          },
          "frequency": {
            "anyOf": [
              { "enum": ["daily", "weekly", "monthly"], "type": "string" },
              { "type": "null" }
            ],
            "title": "Frequency"
          },
          "path": { "maxLength": 255, "title": "Path", "type": "string" },
          "datastreamIds": {
            "items": { "format": "uuid", "type": "string" },
            "title": "Datastreamids",
            "type": "array"
          },
          "resourceTitle": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Resourcetitle"
          },
          "resourceAbstract": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Resourceabstract"
          },
          "resourceKeywords": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Resourcekeywords"
          },
          "publicResource": {
            "default": false,
            "title": "Publicresource",
            "type": "boolean"
          }
        },
        "required": ["path", "datastreamIds"],
        "title": "HydroShareArchivalPostBody",
        "type": "object"
      },
      "HydroShareArchivalPatchBody": {
        "properties": {
          "link": {
            "anyOf": [
              { "format": "uri", "minLength": 1, "type": "string" },
              { "type": "null" }
            ],
            "title": "Link"
          },
          "frequency": {
            "anyOf": [
              { "enum": ["daily", "weekly", "monthly"], "type": "string" },
              { "type": "null" }
            ],
            "title": "Frequency"
          },
          "path": { "maxLength": 255, "title": "Path", "type": "string" },
          "datastreamIds": {
            "items": { "format": "uuid", "type": "string" },
            "title": "Datastreamids",
            "type": "array"
          }
        },
        "title": "HydroShareArchivalPatchBody",
        "type": "object"
      },
      "DatastreamQueryParameters": {
        "properties": {
          "page": {
            "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
            "description": "Page number (1-based).",
            "title": "Page"
          },
          "page_size": {
            "anyOf": [
              { "maximum": 100000, "minimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "description": "The number of items per page.",
            "title": "Page Size"
          },
          "expand_related": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Expand Related"
          },
          "order_by": {
            "anyOf": [
              {
                "items": {
                  "enum": [
                    "name",
                    "observationType",
                    "sampledMedium",
                    "status",
                    "resultType",
                    "isPrivate",
                    "valueCount",
                    "phenomenonBeginTime",
                    "phenomenonEndTime",
                    "resultBeginTime",
                    "resultEndTime",
                    "-name",
                    "-observationType",
                    "-sampledMedium",
                    "-status",
                    "-resultType",
                    "-isPrivate",
                    "-valueCount",
                    "-phenomenonBeginTime",
                    "-phenomenonEndTime",
                    "-resultBeginTime",
                    "-resultEndTime"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": [],
            "description": "Select one or more fields to order the response by.",
            "title": "Order By"
          },
          "workspace_id": {
            "default": [],
            "description": "Filter datastreams by workspace ID.",
            "items": { "format": "uuid", "type": "string" },
            "title": "Workspace Id",
            "type": "array"
          },
          "thing_id": {
            "default": [],
            "description": "Filter datastreams by thing ID.",
            "items": { "format": "uuid", "type": "string" },
            "title": "Thing Id",
            "type": "array"
          },
          "sensor_id": {
            "default": [],
            "description": "Filter datastreams by sensor ID.",
            "items": { "format": "uuid", "type": "string" },
            "title": "Sensor Id",
            "type": "array"
          },
          "observed_property_id": {
            "default": [],
            "description": "Filter datastreams by observed property ID.",
            "items": { "format": "uuid", "type": "string" },
            "title": "Observed Property Id",
            "type": "array"
          },
          "processing_level_id": {
            "default": [],
            "description": "Filter datastreams by processing level ID.",
            "items": { "format": "uuid", "type": "string" },
            "title": "Processing Level Id",
            "type": "array"
          },
          "unit_id": {
            "default": [],
            "description": "Filter datastreams by unit ID.",
            "items": { "format": "uuid", "type": "string" },
            "title": "Unit Id",
            "type": "array"
          },
          "result_qualifier_id": {
            "default": [],
            "description": "Filter datastreams by observation result qualifier ID.",
            "items": { "format": "uuid", "type": "string" },
            "title": "Result Qualifier Id",
            "type": "array"
          },
          "data_source_id": {
            "default": [],
            "description": "Filter datastreams by data source ID.",
            "items": { "format": "uuid", "type": "string" },
            "title": "Data Source Id",
            "type": "array"
          },
          "data_archive_id": {
            "default": [],
            "description": "Filter datastreams by data archive ID.",
            "items": { "format": "uuid", "type": "string" },
            "title": "Data Archive Id",
            "type": "array"
          },
          "observation_type": {
            "default": [],
            "description": "Filter things by observation type.",
            "items": { "type": "string" },
            "title": "Observation Type",
            "type": "array"
          },
          "sampled_medium": {
            "default": [],
            "description": "Filter things by sampled medium.",
            "items": { "type": "string" },
            "title": "Sampled Medium",
            "type": "array"
          },
          "status": {
            "default": [],
            "description": "Filter things by status.",
            "items": { "type": "string" },
            "title": "Status",
            "type": "array"
          },
          "result_type": {
            "default": [],
            "description": "Filter things by result type.",
            "items": { "type": "string" },
            "title": "Result Type",
            "type": "array"
          },
          "is_private": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "description": "Controls whether the datastreams should be private or public.",
            "title": "Is Private"
          },
          "value_count_max": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "description": "Sets the maximum value count of filtered datastreams.",
            "title": "Value Count Max"
          },
          "value_count_min": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "description": "Sets the minimum value count of filtered datastreams.",
            "title": "Value Count Min"
          },
          "phenomenon_begin_time_max": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "description": "Sets the maximum phenomenon begin time of filtered datastreams.",
            "title": "Phenomenon Begin Time Max"
          },
          "phenomenon_begin_time_min": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "description": "Sets the minimum phenomenon begin time of filtered datastreams.",
            "title": "Phenomenon Begin Time Min"
          },
          "phenomenon_end_time_max": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "description": "Sets the maximum phenomenon end time of filtered datastreams.",
            "title": "Phenomenon End Time Max"
          },
          "phenomenon_end_time_min": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "description": "Sets the minimum phenomenon end time of filtered datastreams.",
            "title": "Phenomenon End Time Min"
          },
          "result_begin_time_max": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "description": "Sets the maximum result begin time of filtered datastreams.",
            "title": "Result Begin Time Max"
          },
          "result_begin_time_min": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "description": "Sets the minimum result begin time of filtered datastreams.",
            "title": "Result Begin Time Min"
          },
          "result_end_time_max": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "description": "Sets the maximum result end time of filtered datastreams.",
            "title": "Result End Time Max"
          },
          "result_end_time_min": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "description": "Sets the minimum result end time of filtered datastreams.",
            "title": "Result End Time Min"
          }
        },
        "title": "DatastreamQueryParameters",
        "type": "object"
      },
      "DataSourceSummaryResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "settings": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Settings"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspaceId": {
            "format": "uuid",
            "title": "Workspaceid",
            "type": "string"
          },
          "orchestrationSystemId": {
            "format": "uuid",
            "title": "Orchestrationsystemid",
            "type": "string"
          },
          "schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationScheduleDetailResponse"
              },
              { "type": "null" }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationStatusDetailResponse"
              },
              { "type": "null" }
            ]
          }
        },
        "required": ["name", "id", "workspaceId", "orchestrationSystemId"],
        "title": "DataSourceSummaryResponse",
        "type": "object"
      },
      "DatastreamDetailResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "observationType": {
            "maxLength": 255,
            "title": "Observationtype",
            "type": "string"
          },
          "sampledMedium": {
            "maxLength": 255,
            "title": "Sampledmedium",
            "type": "string"
          },
          "noDataValue": { "title": "Nodatavalue", "type": "number" },
          "aggregationStatistic": {
            "maxLength": 255,
            "title": "Aggregationstatistic",
            "type": "string"
          },
          "timeAggregationInterval": {
            "title": "Timeaggregationinterval",
            "type": "number"
          },
          "status": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Status"
          },
          "resultType": {
            "maxLength": 255,
            "title": "Resulttype",
            "type": "string"
          },
          "valueCount": {
            "anyOf": [{ "minimum": 0, "type": "integer" }, { "type": "null" }],
            "title": "Valuecount"
          },
          "phenomenonBeginTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Phenomenonbegintime"
          },
          "phenomenonEndTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Phenomenonendtime"
          },
          "resultBeginTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Resultbegintime"
          },
          "resultEndTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Resultendtime"
          },
          "isPrivate": {
            "default": false,
            "title": "Isprivate",
            "type": "boolean"
          },
          "isVisible": {
            "default": true,
            "title": "Isvisible",
            "type": "boolean"
          },
          "timeAggregationIntervalUnit": {
            "enum": ["seconds", "minutes", "hours", "days"],
            "title": "Timeaggregationintervalunit",
            "type": "string"
          },
          "intendedTimeSpacing": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Intendedtimespacing"
          },
          "intendedTimeSpacingUnit": {
            "anyOf": [
              {
                "enum": ["seconds", "minutes", "hours", "days"],
                "type": "string"
              },
              { "type": "null" }
            ],
            "title": "Intendedtimespacingunit"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "dataSource": {
            "anyOf": [
              { "$ref": "#/components/schemas/DataSourceSummaryResponse" },
              { "type": "null" }
            ]
          },
          "workspace": {
            "$ref": "#/components/schemas/WorkspaceSummaryResponse"
          },
          "thing": { "$ref": "#/components/schemas/ThingSummaryResponse" },
          "sensor": { "$ref": "#/components/schemas/SensorSummaryResponse" },
          "observedProperty": {
            "$ref": "#/components/schemas/ObservedPropertySummaryResponse"
          },
          "processingLevel": {
            "$ref": "#/components/schemas/ProcessingLevelSummaryResponse"
          },
          "unit": { "$ref": "#/components/schemas/UnitSummaryResponse" }
        },
        "required": [
          "name",
          "description",
          "observationType",
          "sampledMedium",
          "noDataValue",
          "aggregationStatistic",
          "timeAggregationInterval",
          "resultType",
          "timeAggregationIntervalUnit",
          "id",
          "dataSource",
          "workspace",
          "thing",
          "sensor",
          "observedProperty",
          "processingLevel",
          "unit"
        ],
        "title": "DatastreamDetailResponse",
        "type": "object"
      },
      "DatastreamSummaryResponse": {
        "properties": {
          "dataSourceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Datasourceid"
          },
          "thingId": { "format": "uuid", "title": "Thingid", "type": "string" },
          "sensorId": {
            "format": "uuid",
            "title": "Sensorid",
            "type": "string"
          },
          "observedPropertyId": {
            "format": "uuid",
            "title": "Observedpropertyid",
            "type": "string"
          },
          "processingLevelId": {
            "format": "uuid",
            "title": "Processinglevelid",
            "type": "string"
          },
          "unitId": { "format": "uuid", "title": "Unitid", "type": "string" },
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "observationType": {
            "maxLength": 255,
            "title": "Observationtype",
            "type": "string"
          },
          "sampledMedium": {
            "maxLength": 255,
            "title": "Sampledmedium",
            "type": "string"
          },
          "noDataValue": { "title": "Nodatavalue", "type": "number" },
          "aggregationStatistic": {
            "maxLength": 255,
            "title": "Aggregationstatistic",
            "type": "string"
          },
          "timeAggregationInterval": {
            "title": "Timeaggregationinterval",
            "type": "number"
          },
          "status": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Status"
          },
          "resultType": {
            "maxLength": 255,
            "title": "Resulttype",
            "type": "string"
          },
          "valueCount": {
            "anyOf": [{ "minimum": 0, "type": "integer" }, { "type": "null" }],
            "title": "Valuecount"
          },
          "phenomenonBeginTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Phenomenonbegintime"
          },
          "phenomenonEndTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Phenomenonendtime"
          },
          "resultBeginTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Resultbegintime"
          },
          "resultEndTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Resultendtime"
          },
          "isPrivate": {
            "default": false,
            "title": "Isprivate",
            "type": "boolean"
          },
          "isVisible": {
            "default": true,
            "title": "Isvisible",
            "type": "boolean"
          },
          "timeAggregationIntervalUnit": {
            "enum": ["seconds", "minutes", "hours", "days"],
            "title": "Timeaggregationintervalunit",
            "type": "string"
          },
          "intendedTimeSpacing": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Intendedtimespacing"
          },
          "intendedTimeSpacingUnit": {
            "anyOf": [
              {
                "enum": ["seconds", "minutes", "hours", "days"],
                "type": "string"
              },
              { "type": "null" }
            ],
            "title": "Intendedtimespacingunit"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspace_id": {
            "format": "uuid",
            "title": "Workspace Id",
            "type": "string"
          }
        },
        "required": [
          "thingId",
          "sensorId",
          "observedPropertyId",
          "processingLevelId",
          "unitId",
          "name",
          "description",
          "observationType",
          "sampledMedium",
          "noDataValue",
          "aggregationStatistic",
          "timeAggregationInterval",
          "resultType",
          "timeAggregationIntervalUnit",
          "id",
          "workspace_id"
        ],
        "title": "DatastreamSummaryResponse",
        "type": "object"
      },
      "ObservedPropertySummaryResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "definition": { "title": "Definition", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "type": { "maxLength": 255, "title": "Type", "type": "string" },
          "code": { "maxLength": 255, "title": "Code", "type": "string" },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspaceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Workspaceid"
          }
        },
        "required": ["name", "definition", "description", "type", "code", "id"],
        "title": "ObservedPropertySummaryResponse",
        "type": "object"
      },
      "OrchestrationConfigurationScheduleDetailResponse": {
        "properties": {
          "interval": {
            "anyOf": [
              { "exclusiveMinimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "title": "Interval"
          },
          "intervalUnits": {
            "anyOf": [
              { "enum": ["minutes", "hours", "days"], "type": "string" },
              { "type": "null" }
            ],
            "title": "Intervalunits"
          },
          "crontab": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Crontab"
          },
          "startTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Starttime"
          },
          "endTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Endtime"
          }
        },
        "title": "OrchestrationConfigurationScheduleDetailResponse",
        "type": "object"
      },
      "OrchestrationConfigurationStatusDetailResponse": {
        "properties": {
          "lastRunSuccessful": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Lastrunsuccessful"
          },
          "lastRunMessage": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Lastrunmessage"
          },
          "lastRun": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Lastrun"
          },
          "nextRun": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Nextrun"
          },
          "paused": { "default": false, "title": "Paused", "type": "boolean" }
        },
        "title": "OrchestrationConfigurationStatusDetailResponse",
        "type": "object"
      },
      "ProcessingLevelSummaryResponse": {
        "properties": {
          "code": { "maxLength": 255, "title": "Code", "type": "string" },
          "definition": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Definition"
          },
          "explanation": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Explanation"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspaceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Workspaceid"
          }
        },
        "required": ["code", "id", "workspaceId"],
        "title": "ProcessingLevelSummaryResponse",
        "type": "object"
      },
      "SensorSummaryResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "encodingType": {
            "enum": [
              "application/pdf",
              "http://www.opengis.net/doc/IS/SensorML/2.0",
              "text/html",
              "application/json"
            ],
            "maxLength": 255,
            "title": "Encodingtype",
            "type": "string"
          },
          "manufacturer": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Manufacturer"
          },
          "model": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Model"
          },
          "modelLink": {
            "anyOf": [
              { "maxLength": 500, "type": "string" },
              { "type": "null" }
            ],
            "title": "Modellink"
          },
          "methodType": {
            "maxLength": 100,
            "title": "Methodtype",
            "type": "string"
          },
          "methodLink": {
            "anyOf": [
              { "maxLength": 500, "type": "string" },
              { "type": "null" }
            ],
            "title": "Methodlink"
          },
          "methodCode": {
            "anyOf": [
              { "maxLength": 50, "type": "string" },
              { "type": "null" }
            ],
            "title": "Methodcode"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspaceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Workspaceid"
          }
        },
        "required": [
          "name",
          "description",
          "encodingType",
          "methodType",
          "id",
          "workspaceId"
        ],
        "title": "SensorSummaryResponse",
        "type": "object"
      },
      "UnitSummaryResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "symbol": { "maxLength": 255, "title": "Symbol", "type": "string" },
          "definition": { "title": "Definition", "type": "string" },
          "type": { "maxLength": 255, "title": "Type", "type": "string" },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspaceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Workspaceid"
          }
        },
        "required": [
          "name",
          "symbol",
          "definition",
          "type",
          "id",
          "workspaceId"
        ],
        "title": "UnitSummaryResponse",
        "type": "object"
      },
      "DatastreamPostBody": {
        "properties": {
          "dataSourceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Datasourceid"
          },
          "thingId": { "format": "uuid", "title": "Thingid", "type": "string" },
          "sensorId": {
            "format": "uuid",
            "title": "Sensorid",
            "type": "string"
          },
          "observedPropertyId": {
            "format": "uuid",
            "title": "Observedpropertyid",
            "type": "string"
          },
          "processingLevelId": {
            "format": "uuid",
            "title": "Processinglevelid",
            "type": "string"
          },
          "unitId": { "format": "uuid", "title": "Unitid", "type": "string" },
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "observationType": {
            "maxLength": 255,
            "title": "Observationtype",
            "type": "string"
          },
          "sampledMedium": {
            "maxLength": 255,
            "title": "Sampledmedium",
            "type": "string"
          },
          "noDataValue": { "title": "Nodatavalue", "type": "number" },
          "aggregationStatistic": {
            "maxLength": 255,
            "title": "Aggregationstatistic",
            "type": "string"
          },
          "timeAggregationInterval": {
            "title": "Timeaggregationinterval",
            "type": "number"
          },
          "status": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Status"
          },
          "resultType": {
            "maxLength": 255,
            "title": "Resulttype",
            "type": "string"
          },
          "valueCount": {
            "anyOf": [{ "minimum": 0, "type": "integer" }, { "type": "null" }],
            "title": "Valuecount"
          },
          "phenomenonBeginTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Phenomenonbegintime"
          },
          "phenomenonEndTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Phenomenonendtime"
          },
          "resultBeginTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Resultbegintime"
          },
          "resultEndTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Resultendtime"
          },
          "isPrivate": {
            "default": false,
            "title": "Isprivate",
            "type": "boolean"
          },
          "isVisible": {
            "default": true,
            "title": "Isvisible",
            "type": "boolean"
          },
          "timeAggregationIntervalUnit": {
            "enum": ["seconds", "minutes", "hours", "days"],
            "title": "Timeaggregationintervalunit",
            "type": "string"
          },
          "intendedTimeSpacing": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Intendedtimespacing"
          },
          "intendedTimeSpacingUnit": {
            "anyOf": [
              {
                "enum": ["seconds", "minutes", "hours", "days"],
                "type": "string"
              },
              { "type": "null" }
            ],
            "title": "Intendedtimespacingunit"
          }
        },
        "required": [
          "thingId",
          "sensorId",
          "observedPropertyId",
          "processingLevelId",
          "unitId",
          "name",
          "description",
          "observationType",
          "sampledMedium",
          "noDataValue",
          "aggregationStatistic",
          "timeAggregationInterval",
          "resultType",
          "timeAggregationIntervalUnit"
        ],
        "title": "DatastreamPostBody",
        "type": "object"
      },
      "DatastreamPatchBody": {
        "properties": {
          "dataSourceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Datasourceid"
          },
          "thingId": { "format": "uuid", "title": "Thingid", "type": "string" },
          "sensorId": {
            "format": "uuid",
            "title": "Sensorid",
            "type": "string"
          },
          "observedPropertyId": {
            "format": "uuid",
            "title": "Observedpropertyid",
            "type": "string"
          },
          "processingLevelId": {
            "format": "uuid",
            "title": "Processinglevelid",
            "type": "string"
          },
          "unitId": { "format": "uuid", "title": "Unitid", "type": "string" },
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "observationType": {
            "maxLength": 255,
            "title": "Observationtype",
            "type": "string"
          },
          "sampledMedium": {
            "maxLength": 255,
            "title": "Sampledmedium",
            "type": "string"
          },
          "noDataValue": { "title": "Nodatavalue", "type": "number" },
          "aggregationStatistic": {
            "maxLength": 255,
            "title": "Aggregationstatistic",
            "type": "string"
          },
          "timeAggregationInterval": {
            "title": "Timeaggregationinterval",
            "type": "number"
          },
          "status": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Status"
          },
          "resultType": {
            "maxLength": 255,
            "title": "Resulttype",
            "type": "string"
          },
          "valueCount": {
            "anyOf": [{ "minimum": 0, "type": "integer" }, { "type": "null" }],
            "title": "Valuecount"
          },
          "phenomenonBeginTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Phenomenonbegintime"
          },
          "phenomenonEndTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Phenomenonendtime"
          },
          "resultBeginTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Resultbegintime"
          },
          "resultEndTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Resultendtime"
          },
          "isPrivate": { "title": "Isprivate", "type": "boolean" },
          "isVisible": { "title": "Isvisible", "type": "boolean" },
          "timeAggregationIntervalUnit": {
            "enum": ["seconds", "minutes", "hours", "days"],
            "title": "Timeaggregationintervalunit",
            "type": "string"
          },
          "intendedTimeSpacing": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Intendedtimespacing"
          },
          "intendedTimeSpacingUnit": {
            "anyOf": [
              {
                "enum": ["seconds", "minutes", "hours", "days"],
                "type": "string"
              },
              { "type": "null" }
            ],
            "title": "Intendedtimespacingunit"
          }
        },
        "title": "DatastreamPatchBody",
        "type": "object"
      },
      "ObservationQueryParameters": {
        "properties": {
          "page": {
            "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
            "description": "Page number (1-based).",
            "title": "Page"
          },
          "page_size": {
            "anyOf": [
              { "maximum": 100000, "minimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "description": "The number of items per page.",
            "title": "Page Size"
          },
          "expand_related": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Expand Related"
          },
          "order_by": {
            "anyOf": [
              {
                "items": {
                  "enum": ["phenomenonTime", "-phenomenonTime"],
                  "type": "string"
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": [],
            "description": "Select one or more fields to order the response by.",
            "title": "Order By"
          },
          "format": {
            "anyOf": [
              { "enum": ["record", "row", "column"], "type": "string" },
              { "type": "null" }
            ],
            "description": "Controls the format of the observations response.",
            "title": "Format"
          },
          "phenomenon_time_max": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "description": "Sets the maximum phenomenon time of filtered observations.",
            "title": "Phenomenon Time Max"
          },
          "phenomenon_time_min": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "description": "Sets the minimum phenomenon time of filtered observations.",
            "title": "Phenomenon Time Min"
          },
          "result_qualifier_code": {
            "default": [],
            "description": "Filter observations by result qualifier code.",
            "items": { "type": "string" },
            "title": "Result Qualifier Code",
            "type": "array"
          }
        },
        "title": "ObservationQueryParameters",
        "type": "object"
      },
      "ObservationColumnarResponse": {
        "properties": {
          "phenomenonTime": {
            "items": {},
            "title": "Phenomenontime",
            "type": "array"
          },
          "result": { "items": {}, "title": "Result", "type": "array" },
          "resultQualifierCodes": {
            "items": {},
            "title": "Resultqualifiercodes",
            "type": "array"
          }
        },
        "required": ["phenomenonTime", "result", "resultQualifierCodes"],
        "title": "ObservationColumnarResponse",
        "type": "object"
      },
      "ObservationDetailResponse": {
        "properties": {
          "phenomenonTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" }
            ],
            "title": "Phenomenontime"
          },
          "result": { "title": "Result", "type": "number" },
          "resultQualifierCodes": {
            "default": [],
            "items": { "type": "string" },
            "title": "Resultqualifiercodes",
            "type": "array"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspace": {
            "$ref": "#/components/schemas/WorkspaceSummaryResponse"
          },
          "datastream": {
            "$ref": "#/components/schemas/DatastreamSummaryResponse"
          }
        },
        "required": [
          "phenomenonTime",
          "result",
          "id",
          "workspace",
          "datastream"
        ],
        "title": "ObservationDetailResponse",
        "type": "object"
      },
      "ObservationRowResponse": {
        "properties": {
          "fields": {
            "items": {
              "enum": ["phenomenonTime", "result", "resultQualifierCodes"],
              "type": "string"
            },
            "title": "Fields",
            "type": "array"
          },
          "data": {
            "items": { "items": {}, "type": "array" },
            "title": "Data",
            "type": "array"
          }
        },
        "required": ["fields", "data"],
        "title": "ObservationRowResponse",
        "type": "object"
      },
      "ObservationSummaryResponse": {
        "properties": {
          "phenomenonTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" }
            ],
            "title": "Phenomenontime"
          },
          "result": { "title": "Result", "type": "number" },
          "resultQualifierCodes": {
            "default": [],
            "items": { "type": "string" },
            "title": "Resultqualifiercodes",
            "type": "array"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspaceId": {
            "format": "uuid",
            "title": "Workspaceid",
            "type": "string"
          },
          "datastreamId": {
            "format": "uuid",
            "title": "Datastreamid",
            "type": "string"
          }
        },
        "required": [
          "phenomenonTime",
          "result",
          "id",
          "workspaceId",
          "datastreamId"
        ],
        "title": "ObservationSummaryResponse",
        "type": "object"
      },
      "ObservationPostBody": {
        "properties": {
          "phenomenonTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" }
            ],
            "title": "Phenomenontime"
          },
          "result": { "title": "Result", "type": "number" },
          "resultQualifierCodes": {
            "default": [],
            "items": { "type": "string" },
            "title": "Resultqualifiercodes",
            "type": "array"
          }
        },
        "required": ["phenomenonTime", "result"],
        "title": "ObservationPostBody",
        "type": "object"
      },
      "ObservationBulkPostQueryParameters": {
        "properties": {
          "mode": {
            "anyOf": [
              {
                "enum": ["insert", "append", "backfill", "replace"],
                "type": "string"
              },
              { "type": "null" }
            ],
            "description": "Specifies how new observations are added to the datastream. `insert` allows observations at any timestamp. `append` adds only future observations (after the latest existing timestamp). `backfill` adds only historical observations (before the earliest existing timestamp). `replace` deletes all observations in the range of provided observations before inserting new ones.",
            "title": "Mode"
          }
        },
        "title": "ObservationBulkPostQueryParameters",
        "type": "object"
      },
      "ObservationBulkPostBody": {
        "properties": {
          "fields": {
            "items": {
              "enum": ["phenomenonTime", "result", "resultQualifierCodes"],
              "type": "string"
            },
            "title": "Fields",
            "type": "array"
          },
          "data": {
            "items": { "items": {}, "type": "array" },
            "title": "Data",
            "type": "array"
          }
        },
        "required": ["fields", "data"],
        "title": "ObservationBulkPostBody",
        "type": "object"
      },
      "ObservationBulkDeleteBody": {
        "properties": {
          "phenomenonTimeStart": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Phenomenontimestart"
          },
          "phenomenonTimeEnd": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Phenomenontimeend"
          }
        },
        "title": "ObservationBulkDeleteBody",
        "type": "object"
      },
      "ObservedPropertyQueryParameters": {
        "properties": {
          "page": {
            "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
            "description": "Page number (1-based).",
            "title": "Page"
          },
          "page_size": {
            "anyOf": [
              { "maximum": 100000, "minimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "description": "The number of items per page.",
            "title": "Page Size"
          },
          "expand_related": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Expand Related"
          },
          "order_by": {
            "anyOf": [
              {
                "items": {
                  "enum": ["name", "type", "code", "-name", "-type", "-code"],
                  "type": "string"
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": [],
            "description": "Select one or more fields to order the response by.",
            "title": "Order By"
          },
          "workspace_id": {
            "default": [],
            "description": "Filter observed properties by workspace ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Workspace Id",
            "type": "array"
          },
          "thing_id": {
            "default": [],
            "description": "Filter observed properties by thing ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Thing Id",
            "type": "array"
          },
          "datastream_id": {
            "default": [],
            "description": "Filter observed properties by datastream ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Datastream Id",
            "type": "array"
          },
          "type": {
            "default": [],
            "description": "Filter observed properties by type",
            "items": { "type": "string" },
            "title": "Type",
            "type": "array"
          }
        },
        "title": "ObservedPropertyQueryParameters",
        "type": "object"
      },
      "ObservedPropertyDetailResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "definition": { "title": "Definition", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "type": { "maxLength": 255, "title": "Type", "type": "string" },
          "code": { "maxLength": 255, "title": "Code", "type": "string" },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspace": {
            "anyOf": [
              { "$ref": "#/components/schemas/WorkspaceSummaryResponse" },
              { "type": "null" }
            ]
          }
        },
        "required": [
          "name",
          "definition",
          "description",
          "type",
          "code",
          "id",
          "workspace"
        ],
        "title": "ObservedPropertyDetailResponse",
        "type": "object"
      },
      "ObservedPropertyPostBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "definition": { "title": "Definition", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "type": { "maxLength": 255, "title": "Type", "type": "string" },
          "code": { "maxLength": 255, "title": "Code", "type": "string" },
          "workspaceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Workspaceid"
          }
        },
        "required": [
          "name",
          "definition",
          "description",
          "type",
          "code",
          "workspaceId"
        ],
        "title": "ObservedPropertyPostBody",
        "type": "object"
      },
      "ObservedPropertyPatchBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "definition": { "title": "Definition", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "type": { "maxLength": 255, "title": "Type", "type": "string" },
          "code": { "maxLength": 255, "title": "Code", "type": "string" }
        },
        "title": "ObservedPropertyPatchBody",
        "type": "object"
      },
      "UnitQueryParameters": {
        "properties": {
          "page": {
            "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
            "description": "Page number (1-based).",
            "title": "Page"
          },
          "page_size": {
            "anyOf": [
              { "maximum": 100000, "minimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "description": "The number of items per page.",
            "title": "Page Size"
          },
          "expand_related": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Expand Related"
          },
          "order_by": {
            "anyOf": [
              {
                "items": {
                  "enum": [
                    "name",
                    "symbol",
                    "type",
                    "-name",
                    "-symbol",
                    "-type"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": [],
            "description": "Select one or more fields to order the response by.",
            "title": "Order By"
          },
          "workspace_id": {
            "default": [],
            "description": "Filter units by workspace ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Workspace Id",
            "type": "array"
          },
          "thing_id": {
            "default": [],
            "description": "Filter units by thing ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Thing Id",
            "type": "array"
          },
          "datastream_id": {
            "default": [],
            "description": "Filter units by datastream ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Datastream Id",
            "type": "array"
          },
          "type": {
            "default": [],
            "description": "Filter units by type",
            "items": { "type": "string" },
            "title": "Type",
            "type": "array"
          }
        },
        "title": "UnitQueryParameters",
        "type": "object"
      },
      "UnitDetailResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "symbol": { "maxLength": 255, "title": "Symbol", "type": "string" },
          "definition": { "title": "Definition", "type": "string" },
          "type": { "maxLength": 255, "title": "Type", "type": "string" },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspace": {
            "anyOf": [
              { "$ref": "#/components/schemas/WorkspaceSummaryResponse" },
              { "type": "null" }
            ]
          }
        },
        "required": ["name", "symbol", "definition", "type", "id", "workspace"],
        "title": "UnitDetailResponse",
        "type": "object"
      },
      "UnitPostBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "symbol": { "maxLength": 255, "title": "Symbol", "type": "string" },
          "definition": { "title": "Definition", "type": "string" },
          "type": { "maxLength": 255, "title": "Type", "type": "string" },
          "workspaceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Workspaceid"
          }
        },
        "required": ["name", "symbol", "definition", "type"],
        "title": "UnitPostBody",
        "type": "object"
      },
      "UnitPatchBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "symbol": { "maxLength": 255, "title": "Symbol", "type": "string" },
          "definition": { "title": "Definition", "type": "string" },
          "type": { "maxLength": 255, "title": "Type", "type": "string" }
        },
        "title": "UnitPatchBody",
        "type": "object"
      },
      "SensorQueryParameters": {
        "properties": {
          "page": {
            "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
            "description": "Page number (1-based).",
            "title": "Page"
          },
          "page_size": {
            "anyOf": [
              { "maximum": 100000, "minimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "description": "The number of items per page.",
            "title": "Page Size"
          },
          "expand_related": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Expand Related"
          },
          "order_by": {
            "anyOf": [
              {
                "items": {
                  "enum": [
                    "name",
                    "encodingType",
                    "manufacturer",
                    "model",
                    "methodType",
                    "methodCode",
                    "-name",
                    "-encodingType",
                    "-manufacturer",
                    "-model",
                    "-methodType",
                    "-methodCode"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": [],
            "description": "Select one or more fields to order the response by.",
            "title": "Order By"
          },
          "workspace_id": {
            "default": [],
            "description": "Filter sensors by workspace ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Workspace Id",
            "type": "array"
          },
          "thing_id": {
            "default": [],
            "description": "Filter sensors by thing ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Thing Id",
            "type": "array"
          },
          "datastream_id": {
            "default": [],
            "description": "Filter sensors by datastream ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Datastream Id",
            "type": "array"
          },
          "encoding_type": {
            "default": [],
            "description": "Filter sensors by encodingType",
            "items": { "type": "string" },
            "title": "Encoding Type",
            "type": "array"
          },
          "manufacturer": {
            "default": [],
            "description": "Filter sensors by manufacturer",
            "items": { "type": "string" },
            "title": "Manufacturer",
            "type": "array"
          },
          "method_type": {
            "default": [],
            "description": "Filter sensors by methodType",
            "items": { "type": "string" },
            "title": "Method Type",
            "type": "array"
          }
        },
        "title": "SensorQueryParameters",
        "type": "object"
      },
      "SensorDetailResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "encodingType": {
            "enum": [
              "application/pdf",
              "http://www.opengis.net/doc/IS/SensorML/2.0",
              "text/html",
              "application/json"
            ],
            "maxLength": 255,
            "title": "Encodingtype",
            "type": "string"
          },
          "manufacturer": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Manufacturer"
          },
          "model": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Model"
          },
          "modelLink": {
            "anyOf": [
              { "maxLength": 500, "type": "string" },
              { "type": "null" }
            ],
            "title": "Modellink"
          },
          "methodType": {
            "maxLength": 100,
            "title": "Methodtype",
            "type": "string"
          },
          "methodLink": {
            "anyOf": [
              { "maxLength": 500, "type": "string" },
              { "type": "null" }
            ],
            "title": "Methodlink"
          },
          "methodCode": {
            "anyOf": [
              { "maxLength": 50, "type": "string" },
              { "type": "null" }
            ],
            "title": "Methodcode"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspace": {
            "anyOf": [
              { "$ref": "#/components/schemas/WorkspaceSummaryResponse" },
              { "type": "null" }
            ]
          }
        },
        "required": [
          "name",
          "description",
          "encodingType",
          "methodType",
          "id",
          "workspace"
        ],
        "title": "SensorDetailResponse",
        "type": "object"
      },
      "SensorPostBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "encodingType": {
            "enum": [
              "application/pdf",
              "http://www.opengis.net/doc/IS/SensorML/2.0",
              "text/html",
              "application/json"
            ],
            "maxLength": 255,
            "title": "Encodingtype",
            "type": "string"
          },
          "manufacturer": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Manufacturer"
          },
          "model": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Model"
          },
          "modelLink": {
            "anyOf": [
              { "maxLength": 500, "type": "string" },
              { "type": "null" }
            ],
            "title": "Modellink"
          },
          "methodType": {
            "maxLength": 100,
            "title": "Methodtype",
            "type": "string"
          },
          "methodLink": {
            "anyOf": [
              { "maxLength": 500, "type": "string" },
              { "type": "null" }
            ],
            "title": "Methodlink"
          },
          "methodCode": {
            "anyOf": [
              { "maxLength": 50, "type": "string" },
              { "type": "null" }
            ],
            "title": "Methodcode"
          },
          "workspaceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Workspaceid"
          }
        },
        "required": ["name", "description", "encodingType", "methodType"],
        "title": "SensorPostBody",
        "type": "object"
      },
      "SensorPatchBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "encodingType": {
            "enum": [
              "application/pdf",
              "http://www.opengis.net/doc/IS/SensorML/2.0",
              "text/html",
              "application/json"
            ],
            "maxLength": 255,
            "title": "Encodingtype",
            "type": "string"
          },
          "manufacturer": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Manufacturer"
          },
          "model": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Model"
          },
          "modelLink": {
            "anyOf": [
              { "maxLength": 500, "type": "string" },
              { "type": "null" }
            ],
            "title": "Modellink"
          },
          "methodType": {
            "maxLength": 100,
            "title": "Methodtype",
            "type": "string"
          },
          "methodLink": {
            "anyOf": [
              { "maxLength": 500, "type": "string" },
              { "type": "null" }
            ],
            "title": "Methodlink"
          },
          "methodCode": {
            "anyOf": [
              { "maxLength": 50, "type": "string" },
              { "type": "null" }
            ],
            "title": "Methodcode"
          }
        },
        "title": "SensorPatchBody",
        "type": "object"
      },
      "ProcessingLevelQueryParameters": {
        "properties": {
          "page": {
            "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
            "description": "Page number (1-based).",
            "title": "Page"
          },
          "page_size": {
            "anyOf": [
              { "maximum": 100000, "minimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "description": "The number of items per page.",
            "title": "Page Size"
          },
          "expand_related": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Expand Related"
          },
          "order_by": {
            "anyOf": [
              {
                "items": { "enum": ["code", "-code"], "type": "string" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": [],
            "description": "Select one or more fields to order the response by.",
            "title": "Order By"
          },
          "workspace_id": {
            "default": [],
            "description": "Filter processing levels by workspace ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Workspace Id",
            "type": "array"
          },
          "thing_id": {
            "default": [],
            "description": "Filter processing levels by thing ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Thing Id",
            "type": "array"
          },
          "datastream_id": {
            "default": [],
            "description": "Filter processing levels by datastream ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Datastream Id",
            "type": "array"
          }
        },
        "title": "ProcessingLevelQueryParameters",
        "type": "object"
      },
      "ProcessingLevelDetailResponse": {
        "properties": {
          "code": { "maxLength": 255, "title": "Code", "type": "string" },
          "definition": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Definition"
          },
          "explanation": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Explanation"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspace": {
            "anyOf": [
              { "$ref": "#/components/schemas/WorkspaceSummaryResponse" },
              { "type": "null" }
            ]
          }
        },
        "required": ["code", "id", "workspace"],
        "title": "ProcessingLevelDetailResponse",
        "type": "object"
      },
      "ProcessingLevelPostBody": {
        "properties": {
          "code": { "maxLength": 255, "title": "Code", "type": "string" },
          "definition": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Definition"
          },
          "explanation": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Explanation"
          },
          "workspaceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Workspaceid"
          }
        },
        "required": ["code"],
        "title": "ProcessingLevelPostBody",
        "type": "object"
      },
      "ProcessingLevelPatchBody": {
        "properties": {
          "code": { "maxLength": 255, "title": "Code", "type": "string" },
          "definition": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Definition"
          },
          "explanation": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Explanation"
          }
        },
        "title": "ProcessingLevelPatchBody",
        "type": "object"
      },
      "ResultQualifierQueryParameters": {
        "properties": {
          "page": {
            "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
            "description": "Page number (1-based).",
            "title": "Page"
          },
          "page_size": {
            "anyOf": [
              { "maximum": 100000, "minimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "description": "The number of items per page.",
            "title": "Page Size"
          },
          "expand_related": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Expand Related"
          },
          "order_by": {
            "anyOf": [
              {
                "items": { "enum": ["code", "-code"], "type": "string" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": [],
            "description": "Select one or more fields to order the response by.",
            "title": "Order By"
          },
          "workspace_id": {
            "default": [],
            "description": "Filter sensors by workspace ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Workspace Id",
            "type": "array"
          },
          "thing_id": {
            "default": [],
            "description": "Filter result qualifiers by thing ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Thing Id",
            "type": "array"
          },
          "datastream_id": {
            "default": [],
            "description": "Filter result qualifiers by datastream ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Datastream Id",
            "type": "array"
          }
        },
        "title": "ResultQualifierQueryParameters",
        "type": "object"
      },
      "ResultQualifierDetailResponse": {
        "properties": {
          "code": { "maxLength": 255, "title": "Code", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspace": {
            "anyOf": [
              { "$ref": "#/components/schemas/WorkspaceSummaryResponse" },
              { "type": "null" }
            ]
          }
        },
        "required": ["code", "description", "id", "workspace"],
        "title": "ResultQualifierDetailResponse",
        "type": "object"
      },
      "ResultQualifierSummaryResponse": {
        "properties": {
          "code": { "maxLength": 255, "title": "Code", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspaceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Workspaceid"
          }
        },
        "required": ["code", "description", "id", "workspaceId"],
        "title": "ResultQualifierSummaryResponse",
        "type": "object"
      },
      "ResultQualifierPostBody": {
        "properties": {
          "code": { "maxLength": 255, "title": "Code", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "workspaceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Workspaceid"
          }
        },
        "required": ["code", "description"],
        "title": "ResultQualifierPostBody",
        "type": "object"
      },
      "ResultQualifierPatchBody": {
        "properties": {
          "code": { "maxLength": 255, "title": "Code", "type": "string" },
          "description": { "title": "Description", "type": "string" }
        },
        "title": "ResultQualifierPatchBody",
        "type": "object"
      },
      "OrchestrationSystemQueryParameters": {
        "properties": {
          "page": {
            "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
            "description": "Page number (1-based).",
            "title": "Page"
          },
          "page_size": {
            "anyOf": [
              { "maximum": 100000, "minimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "description": "The number of items per page.",
            "title": "Page Size"
          },
          "expand_related": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Expand Related"
          },
          "order_by": {
            "anyOf": [
              {
                "items": {
                  "enum": ["name", "type", "-name", "-type"],
                  "type": "string"
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": [],
            "description": "Select one or more fields to order the response by.",
            "title": "Order By"
          },
          "workspace_id": {
            "default": [],
            "description": "Filter sensors by workspace ID.",
            "items": {
              "anyOf": [
                { "format": "uuid", "type": "string" },
                { "const": "null", "enum": ["null"], "type": "string" }
              ]
            },
            "title": "Workspace Id",
            "type": "array"
          },
          "type": {
            "default": [],
            "description": "Filter orchestration systems by type.",
            "items": { "type": "string" },
            "title": "Type",
            "type": "array"
          }
        },
        "title": "OrchestrationSystemQueryParameters",
        "type": "object"
      },
      "OrchestrationSystemDetailResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "type": { "maxLength": 255, "title": "Type", "type": "string" },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspace": {
            "anyOf": [
              { "$ref": "#/components/schemas/WorkspaceSummaryResponse" },
              { "type": "null" }
            ]
          }
        },
        "required": ["name", "type", "id", "workspace"],
        "title": "OrchestrationSystemDetailResponse",
        "type": "object"
      },
      "OrchestrationSystemSummaryResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "type": { "maxLength": 255, "title": "Type", "type": "string" },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspaceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Workspaceid"
          }
        },
        "required": ["name", "type", "id", "workspaceId"],
        "title": "OrchestrationSystemSummaryResponse",
        "type": "object"
      },
      "OrchestrationSystemPostBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "type": { "maxLength": 255, "title": "Type", "type": "string" },
          "workspaceId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Workspaceid"
          }
        },
        "required": ["name", "type"],
        "title": "OrchestrationSystemPostBody",
        "type": "object"
      },
      "OrchestrationSystemPatchBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "type": { "maxLength": 255, "title": "Type", "type": "string" }
        },
        "title": "OrchestrationSystemPatchBody",
        "type": "object"
      },
      "OrchestrationConfigurationQueryParameters": {
        "properties": {
          "page": {
            "anyOf": [{ "minimum": 1, "type": "integer" }, { "type": "null" }],
            "description": "Page number (1-based).",
            "title": "Page"
          },
          "page_size": {
            "anyOf": [
              { "maximum": 100000, "minimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "description": "The number of items per page.",
            "title": "Page Size"
          },
          "expand_related": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Expand Related"
          },
          "order_by": {
            "anyOf": [
              {
                "items": {
                  "enum": [
                    "name",
                    "startTime",
                    "endTime",
                    "-name",
                    "-startTime",
                    "-endTime"
                  ],
                  "type": "string"
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "default": [],
            "description": "Select one or more fields to order the response by.",
            "title": "Order By"
          },
          "workspace_id": {
            "default": [],
            "description": "Filter by workspace ID.",
            "items": { "format": "uuid", "type": "string" },
            "title": "Workspace Id",
            "type": "array"
          },
          "orchestration_system_id": {
            "default": [],
            "description": "Filter by orchestration system ID.",
            "items": { "format": "uuid", "type": "string" },
            "title": "Orchestration System Id",
            "type": "array"
          },
          "datastream_id": {
            "default": [],
            "description": "Filter by associated datastream ID.",
            "items": { "format": "uuid", "type": "string" },
            "title": "Datastream Id",
            "type": "array"
          },
          "last_run_successful": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "description": "Filters by whether the previous job ran successfully.",
            "title": "Last Run Successful"
          },
          "last_run_max": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "description": "Sets the maximum last run time of filtered datastreams.",
            "title": "Last Run Max"
          },
          "last_run_min": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "description": "Sets the minimum last run time of filtered datastreams.",
            "title": "Last Run Min"
          },
          "next_run_max": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "description": "Sets the maximum next run time of filtered datastreams.",
            "title": "Next Run Max"
          },
          "next_run_min": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "description": "Sets the minimum next run time of filtered datastreams.",
            "title": "Next Run Min"
          }
        },
        "title": "OrchestrationConfigurationQueryParameters",
        "type": "object"
      },
      "DataSourceDetailResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "settings": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Settings"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspaceId": {
            "format": "uuid",
            "title": "Workspaceid",
            "type": "string"
          },
          "orchestrationSystem": {
            "$ref": "#/components/schemas/OrchestrationSystemSummaryResponse"
          },
          "schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationScheduleDetailResponse"
              },
              { "type": "null" }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationStatusDetailResponse"
              },
              { "type": "null" }
            ]
          },
          "datastreams": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DatastreamSummaryResponse"
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Datastreams"
          }
        },
        "required": ["name", "id", "workspaceId", "orchestrationSystem"],
        "title": "DataSourceDetailResponse",
        "type": "object"
      },
      "DataSourcePostBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "settings": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Settings"
          },
          "workspaceId": {
            "format": "uuid",
            "title": "Workspaceid",
            "type": "string"
          },
          "orchestrationSystemId": {
            "format": "uuid",
            "title": "Orchestrationsystemid",
            "type": "string"
          },
          "schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationSchedulePostBody"
              },
              { "type": "null" }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationStatusPostBody"
              },
              { "type": "null" }
            ]
          },
          "datastreamIds": {
            "anyOf": [
              {
                "items": { "format": "uuid", "type": "string" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Datastreamids"
          }
        },
        "required": ["name", "workspaceId", "orchestrationSystemId"],
        "title": "DataSourcePostBody",
        "type": "object"
      },
      "OrchestrationConfigurationSchedulePostBody": {
        "properties": {
          "interval": {
            "anyOf": [
              { "exclusiveMinimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "title": "Interval"
          },
          "intervalUnits": {
            "anyOf": [
              { "enum": ["minutes", "hours", "days"], "type": "string" },
              { "type": "null" }
            ],
            "title": "Intervalunits"
          },
          "crontab": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Crontab"
          },
          "startTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Starttime"
          },
          "endTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Endtime"
          }
        },
        "title": "OrchestrationConfigurationSchedulePostBody",
        "type": "object"
      },
      "OrchestrationConfigurationStatusPostBody": {
        "properties": {
          "lastRunSuccessful": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Lastrunsuccessful"
          },
          "lastRunMessage": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Lastrunmessage"
          },
          "lastRun": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Lastrun"
          },
          "nextRun": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Nextrun"
          },
          "paused": { "default": false, "title": "Paused", "type": "boolean" }
        },
        "title": "OrchestrationConfigurationStatusPostBody",
        "type": "object"
      },
      "DataSourcePatchBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "settings": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Settings"
          },
          "orchestrationSystemId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Orchestrationsystemid"
          },
          "schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationSchedulePatchBody"
              },
              { "type": "null" }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationStatusPatchBody"
              },
              { "type": "null" }
            ]
          }
        },
        "title": "DataSourcePatchBody",
        "type": "object"
      },
      "OrchestrationConfigurationSchedulePatchBody": {
        "properties": {
          "interval": {
            "anyOf": [
              { "exclusiveMinimum": 0, "type": "integer" },
              { "type": "null" }
            ],
            "title": "Interval"
          },
          "intervalUnits": {
            "anyOf": [
              { "enum": ["minutes", "hours", "days"], "type": "string" },
              { "type": "null" }
            ],
            "title": "Intervalunits"
          },
          "crontab": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Crontab"
          },
          "startTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Starttime"
          },
          "endTime": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Endtime"
          }
        },
        "title": "OrchestrationConfigurationSchedulePatchBody",
        "type": "object"
      },
      "OrchestrationConfigurationStatusPatchBody": {
        "properties": {
          "lastRunSuccessful": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Lastrunsuccessful"
          },
          "lastRunMessage": {
            "anyOf": [
              { "maxLength": 255, "type": "string" },
              { "type": "null" }
            ],
            "title": "Lastrunmessage"
          },
          "lastRun": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Lastrun"
          },
          "nextRun": {
            "anyOf": [
              { "type": "string" },
              { "format": "date-time", "type": "string" },
              { "type": "null" }
            ],
            "title": "Nextrun"
          },
          "paused": { "title": "Paused", "type": "boolean" }
        },
        "title": "OrchestrationConfigurationStatusPatchBody",
        "type": "object"
      },
      "DataArchiveDetailResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "settings": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Settings"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspace": {
            "$ref": "#/components/schemas/WorkspaceSummaryResponse"
          },
          "orchestrationSystem": {
            "$ref": "#/components/schemas/OrchestrationSystemSummaryResponse"
          },
          "schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationScheduleDetailResponse"
              },
              { "type": "null" }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationStatusDetailResponse"
              },
              { "type": "null" }
            ]
          },
          "datastreams": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DatastreamSummaryResponse"
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Datastreams"
          }
        },
        "required": ["name", "id", "workspace", "orchestrationSystem"],
        "title": "DataArchiveDetailResponse",
        "type": "object"
      },
      "DataArchiveSummaryResponse": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "settings": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Settings"
          },
          "id": { "format": "uuid", "title": "Id", "type": "string" },
          "workspaceId": {
            "format": "uuid",
            "title": "Workspaceid",
            "type": "string"
          },
          "orchestrationSystemId": {
            "format": "uuid",
            "title": "Orchestrationsystemid",
            "type": "string"
          },
          "schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationScheduleDetailResponse"
              },
              { "type": "null" }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationStatusDetailResponse"
              },
              { "type": "null" }
            ]
          }
        },
        "required": ["name", "id", "workspaceId", "orchestrationSystemId"],
        "title": "DataArchiveSummaryResponse",
        "type": "object"
      },
      "DataArchivePostBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "settings": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Settings"
          },
          "workspaceId": {
            "format": "uuid",
            "title": "Workspaceid",
            "type": "string"
          },
          "orchestrationSystemId": {
            "format": "uuid",
            "title": "Orchestrationsystemid",
            "type": "string"
          },
          "schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationSchedulePostBody"
              },
              { "type": "null" }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationStatusPostBody"
              },
              { "type": "null" }
            ]
          },
          "datastreamIds": {
            "anyOf": [
              {
                "items": { "format": "uuid", "type": "string" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Datastreamids"
          }
        },
        "required": ["name", "workspaceId", "orchestrationSystemId"],
        "title": "DataArchivePostBody",
        "type": "object"
      },
      "DataArchivePatchBody": {
        "properties": {
          "name": { "maxLength": 255, "title": "Name", "type": "string" },
          "settings": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Settings"
          },
          "orchestrationSystemId": {
            "anyOf": [
              { "format": "uuid", "type": "string" },
              { "type": "null" }
            ],
            "title": "Orchestrationsystemid"
          },
          "schedule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationSchedulePatchBody"
              },
              { "type": "null" }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrchestrationConfigurationStatusPatchBody"
              },
              { "type": "null" }
            ]
          }
        },
        "title": "DataArchivePatchBody",
        "type": "object"
      }
    },
    "securitySchemes": {
      "SessionAuth": { "type": "apiKey", "in": "cookie", "name": "hs_session" },
      "BearerAuth": { "type": "http", "scheme": "bearer" },
      "APIKeyAuth": { "type": "apiKey", "in": "header", "name": "X-Api-Key" }
    }
  },
  "servers": []
}
